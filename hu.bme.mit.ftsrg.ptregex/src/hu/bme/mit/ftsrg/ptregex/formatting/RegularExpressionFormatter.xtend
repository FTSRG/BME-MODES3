/*
 * generated by Xtext
 */
package hu.bme.mit.ftsrg.ptregex.formatting

import com.google.inject.Inject
import hu.bme.mit.ftsrg.ptregex.services.RegularExpressionGrammarAccess
import org.eclipse.xtext.formatting.impl.AbstractDeclarativeFormatter
import org.eclipse.xtext.formatting.impl.FormattingConfig

// import com.google.inject.Inject;
// import hu.bme.mit.ftsrg.ptregex.services.RegularExpressionGrammarAccess

/**
 * This class contains custom formatting declarations.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#formatting
 * on how and when to use it.
 * 
 * Also see {@link org.eclipse.xtext.xtext.XtextFormattingTokenSerializer} as an example
 */
class RegularExpressionFormatter extends AbstractDeclarativeFormatter {

	@Inject extension RegularExpressionGrammarAccess
	
	override protected void configureFormatting(extension FormattingConfig c) {
// It's usually a good idea to activate the following three statements.
// They will add and preserve newlines around comments
		setLinewrap(0, 1, 2).before(SL_COMMENTRule)
		setLinewrap(0, 1, 2).before(ML_COMMENTRule)
		setLinewrap(0, 1, 1).after(ML_COMMENTRule)
	}
}
