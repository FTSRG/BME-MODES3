package hu.bme.mit.inf.piclient.ui;

import java.awt.Color;
import javax.swing.JColorChooser;
import hu.bme.mit.inf.kvcontrol.mqtt.client.senders.OccupancyRequestSender;
import hu.bme.mit.inf.kvcontrol.mqtt.client.senders.SectionRequestSender;
import hu.bme.mit.inf.kvcontrol.mqtt.client.senders.TurnoutRequestSender;
import hu.bme.mit.inf.mqtt.common.network.MQTTConfiguration;
import hu.bme.mit.inf.piclient.Application;
import static hu.bme.mit.inf.piclient.ui.SettingsWindow.Configuration;

/**
 *
 * @author zsoltmazlo, benedekh
 */
public class SettingsWindow extends javax.swing.JFrame {

    public static String TURNOUT_ACTIVE_BRANCH_COLOR = "000000";
    public static String TURNOUT_DEACTIVE_BRANCH_COLOR = "a8a8a8";
    public static String SECTION_DISABLED_COLOR = "FF0000";
    public static String SECTION_ENABLED_COLOR = "00CC00";
    public static String OCCUPANCY_BACKGROUND = "000000";

    public static TurnoutControllerProxy turnoutControllerProxy;
    public static OccupancyControllerProxy occupancyControllerProxy;
    public static SectionControllerProxy sectionControllerProxy;

    public static class Configuration {

        // mqttConfiguration information for the MQTT broker
        public static MQTTConfiguration mqttSectionConfiguration;
        public static MQTTConfiguration mqttTurnoutConfiguration;
        public static MQTTConfiguration mqttOccupancyConfiguration;

        //  how often shall we refresh the values
        public static int heartbeatTimeout = 800;
    }

    /**
     * Creates new form Settings
     */
    public SettingsWindow() {
        initComponents();
        getContentPane().setBackground(Application.pageBackground);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        remoteServerIP1 = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        turnoutStatusPolling = new javax.swing.JCheckBox();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        turnoutActiveBranchColor = new javax.swing.JPanel();
        turnoutDeactiveBranchColor = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        sectionStatusPolling = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lockedSectionColor = new javax.swing.JPanel();
        unlockedSectionColor = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        occupancyStatusPolling = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        locoObjectBackground = new javax.swing.JPanel();
        pauseHeartBeat = new javax.swing.JButton();
        startHeartBeat = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        pollingInterval = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        mqttSectionTopicField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        mqttPortField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        mqttProtocolField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        mqttAddressField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        mqttTurnoutTopicField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        mqttOccupancyTopicField = new javax.swing.JTextField();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        remoteServerIP1.setText("localhost");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        setBackground(Application.pageBackground);
        setMinimumSize(new java.awt.Dimension(360, 650));

        jPanel1.setBackground(Application.pageBackground);
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Turnouts", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, Application.titleFont, Application.titleForeground));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(0, 0, 54));
        jLabel1.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel1.setForeground(Application.labelForeground);
        jLabel1.setText("status polling actively (not recommended)");

        turnoutStatusPolling.setBackground(Application.pageBackground);
        turnoutStatusPolling.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                turnoutStatusPollingStateChanged(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(0, 0, 54));
        jLabel2.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel2.setForeground(Application.labelForeground);
        jLabel2.setText("turnout switched branch's color");

        jLabel3.setBackground(new java.awt.Color(0, 0, 54));
        jLabel3.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel3.setForeground(Application.labelForeground);
        jLabel3.setText("turnout abonded branch's color");

        turnoutActiveBranchColor.setBackground(Color.decode("0x"+SettingsWindow.TURNOUT_ACTIVE_BRANCH_COLOR));
        turnoutActiveBranchColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnoutActiveBranchColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout turnoutActiveBranchColorLayout = new javax.swing.GroupLayout(turnoutActiveBranchColor);
        turnoutActiveBranchColor.setLayout(turnoutActiveBranchColorLayout);
        turnoutActiveBranchColorLayout.setHorizontalGroup(
            turnoutActiveBranchColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        turnoutActiveBranchColorLayout.setVerticalGroup(
            turnoutActiveBranchColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        turnoutDeactiveBranchColor.setBackground(Color.decode("0x"+TURNOUT_DEACTIVE_BRANCH_COLOR));
        turnoutDeactiveBranchColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                turnoutDeactiveBranchColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout turnoutDeactiveBranchColorLayout = new javax.swing.GroupLayout(turnoutDeactiveBranchColor);
        turnoutDeactiveBranchColor.setLayout(turnoutDeactiveBranchColorLayout);
        turnoutDeactiveBranchColorLayout.setHorizontalGroup(
            turnoutDeactiveBranchColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        turnoutDeactiveBranchColorLayout.setVerticalGroup(
            turnoutDeactiveBranchColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(turnoutActiveBranchColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(turnoutStatusPolling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(turnoutDeactiveBranchColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(turnoutStatusPolling)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(turnoutActiveBranchColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(turnoutDeactiveBranchColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel2.setBackground(Application.pageBackground);
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sections", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, Application.titleFont, Application.titleForeground));

        jLabel4.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel4.setForeground(Application.labelForeground);
        jLabel4.setText("status polling actively (not recommended)");

        sectionStatusPolling.setBackground(Application.pageBackground);
        sectionStatusPolling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sectionStatusPollingMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel5.setForeground(Application.labelForeground);
        jLabel5.setText("locked section's color");

        jLabel6.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel6.setForeground(Application.labelForeground);
        jLabel6.setText("unlocked section's color");

        lockedSectionColor.setBackground(Color.decode("0x"+SettingsWindow.SECTION_DISABLED_COLOR));
        lockedSectionColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lockedSectionColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout lockedSectionColorLayout = new javax.swing.GroupLayout(lockedSectionColor);
        lockedSectionColor.setLayout(lockedSectionColorLayout);
        lockedSectionColorLayout.setHorizontalGroup(
            lockedSectionColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        lockedSectionColorLayout.setVerticalGroup(
            lockedSectionColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        unlockedSectionColor.setBackground(Color.decode("0x"+SECTION_ENABLED_COLOR));
        unlockedSectionColor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                unlockedSectionColorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout unlockedSectionColorLayout = new javax.swing.GroupLayout(unlockedSectionColor);
        unlockedSectionColor.setLayout(unlockedSectionColorLayout);
        unlockedSectionColorLayout.setHorizontalGroup(
            unlockedSectionColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        unlockedSectionColorLayout.setVerticalGroup(
            unlockedSectionColorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 15, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lockedSectionColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(sectionStatusPolling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unlockedSectionColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(sectionStatusPolling)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lockedSectionColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unlockedSectionColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jPanel3.setBackground(Application.pageBackground);
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Locomotives", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, Application.titleFont, Application.titleForeground));
        jPanel3.setForeground(Application.labelForeground);

        jLabel7.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel7.setForeground(Application.labelForeground);
        jLabel7.setText("status polling (recommended)");

        occupancyStatusPolling.setBackground(Application.pageBackground);
        occupancyStatusPolling.setSelected(true);
        occupancyStatusPolling.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                occupancyStatusPollingMouseClicked(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel8.setForeground(Application.labelForeground);
        jLabel8.setText("feedback element's background");

        locoObjectBackground.setBackground(Color.decode("0x"+SettingsWindow.OCCUPANCY_BACKGROUND));
        locoObjectBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                locoObjectBackgroundMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout locoObjectBackgroundLayout = new javax.swing.GroupLayout(locoObjectBackground);
        locoObjectBackground.setLayout(locoObjectBackgroundLayout);
        locoObjectBackgroundLayout.setHorizontalGroup(
            locoObjectBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        locoObjectBackgroundLayout.setVerticalGroup(
            locoObjectBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locoObjectBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(occupancyStatusPolling, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(occupancyStatusPolling)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(locoObjectBackground, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pauseHeartBeat.setBackground(Application.buttonBackground);
        pauseHeartBeat.setFont(Application.buttonFont);
        pauseHeartBeat.setIcon(Application.getIcon(Application.SettingsWindow_pauseButton, getClass())
        );
        pauseHeartBeat.setBorder(Application.buttonBorder);
        pauseHeartBeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pauseHeartBeatMouseClicked(evt);
            }
        });

        startHeartBeat.setBackground(Application.buttonBackground);
        startHeartBeat.setFont(Application.buttonFont);
        startHeartBeat.setIcon(Application.getIcon(Application.SettingsWindow_playButton, getClass()));
        startHeartBeat.setBorder(Application.buttonBorder);
        startHeartBeat.setMargin(Application.buttonInsets);
        startHeartBeat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                startHeartBeatMouseClicked(evt);
            }
        });

        jSlider1.setBackground(Application.pageBackground);
        jSlider1.setFont(Application.labelFont);
        jSlider1.setForeground(Application.sliderForeground);
        jSlider1.setMajorTickSpacing(50);
        jSlider1.setMaximum(1500);
        jSlider1.setMinimum(300);
        jSlider1.setMinorTickSpacing(50);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setToolTipText("");
        jSlider1.setValue(900);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel9.setFont(Application.labelFont);
        jLabel9.setForeground(Application.labelForeground);
        jLabel9.setText("300");

        jLabel10.setFont(Application.labelFont);
        jLabel10.setForeground(Application.labelForeground);
        jLabel10.setText("1500");

        pollingInterval.setFont(Application.labelFont);
        pollingInterval.setForeground(Application.labelForeground);
        pollingInterval.setText("800ms");

        jPanel6.setBackground(Application.pageBackground);
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Connection", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, Application.titleFont, Application.titleForeground));
        jPanel6.setForeground(new java.awt.Color(255, 255, 255));

        mqttSectionTopicField.setText("modes3/kvcontrol/section");

        jLabel11.setBackground(Application.pageBackground);
        jLabel11.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel11.setForeground(Application.labelForeground);
        jLabel11.setText("Address:");

        jLabel12.setBackground(Application.pageBackground);
        jLabel12.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel12.setForeground(Application.labelForeground);
        jLabel12.setText("Port:");

        mqttPortField.setText("1883");
        mqttPortField.setToolTipText("");

        jLabel13.setBackground(Application.pageBackground);
        jLabel13.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel13.setForeground(Application.labelForeground);
        jLabel13.setText("Protocol:");

        mqttProtocolField.setText("tcp");

        jLabel14.setBackground(Application.pageBackground);
        jLabel14.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel14.setForeground(Application.labelForeground);
        jLabel14.setText("Section topic:");

        mqttAddressField.setText("localhost");

        jLabel15.setBackground(Application.pageBackground);
        jLabel15.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel15.setForeground(Application.labelForeground);
        jLabel15.setText("Turnout topic:");

        mqttTurnoutTopicField.setText("modes3/kvcontrol/turnout");

        jLabel16.setBackground(Application.pageBackground);
        jLabel16.setFont(new java.awt.Font("Ubuntu Light", 0, 14)); // NOI18N
        jLabel16.setForeground(Application.labelForeground);
        jLabel16.setText("Occupancy topic:");

        mqttOccupancyTopicField.setText("modes3/kvcontrol/soc");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mqttPortField))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mqttProtocolField, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mqttAddressField))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mqttSectionTopicField))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mqttTurnoutTopicField))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(mqttOccupancyTopicField)))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mqttProtocolField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(mqttAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(mqttPortField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mqttSectionTopicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mqttTurnoutTopicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(mqttOccupancyTopicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pollingInterval)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(pauseHeartBeat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(startHeartBeat)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(pollingInterval))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pauseHeartBeat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(startHeartBeat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void turnoutActiveBranchColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_turnoutActiveBranchColorMouseClicked
        Color prevColor = Color.decode("0x" + TURNOUT_ACTIVE_BRANCH_COLOR);
        Color newColor = JColorChooser.showDialog(null, "Pick a color",
                prevColor);
        if (newColor != null) {
            turnoutActiveBranchColor.setBackground(newColor);
            int rgb = newColor.getRGB();
            TURNOUT_ACTIVE_BRANCH_COLOR = String.format("%06X", rgb).substring(2);
        }
    }//GEN-LAST:event_turnoutActiveBranchColorMouseClicked

    private void turnoutDeactiveBranchColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_turnoutDeactiveBranchColorMouseClicked
        Color prevColor = Color.decode("0x" + TURNOUT_DEACTIVE_BRANCH_COLOR);
        Color newColor = JColorChooser.showDialog(null, "Pick a color",
                prevColor);
        if (newColor != null) {
            turnoutDeactiveBranchColor.setBackground(newColor);
            int rgb = newColor.getRGB();
            TURNOUT_DEACTIVE_BRANCH_COLOR = String.format("%06X", rgb).substring(
                    2);
        }
    }//GEN-LAST:event_turnoutDeactiveBranchColorMouseClicked

    private void lockedSectionColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lockedSectionColorMouseClicked
        Color prevColor = Color.decode("0x" + SECTION_DISABLED_COLOR);
        Color newColor = JColorChooser.showDialog(null, "Pick a color",
                prevColor);
        if (newColor != null) {
            lockedSectionColor.setBackground(newColor);
            int rgb = newColor.getRGB();
            SECTION_DISABLED_COLOR = String.format("%06X", rgb).substring(2);
        }
    }//GEN-LAST:event_lockedSectionColorMouseClicked

    private void unlockedSectionColorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_unlockedSectionColorMouseClicked
        Color prevColor = Color.decode("0x" + SECTION_ENABLED_COLOR);
        Color newColor = JColorChooser.showDialog(null, "Pick a color",
                prevColor);
        if (newColor != null) {
            unlockedSectionColor.setBackground(newColor);
            int rgb = newColor.getRGB();
            SECTION_ENABLED_COLOR = String.format("%06X", rgb).substring(2);
        }
    }//GEN-LAST:event_unlockedSectionColorMouseClicked

    private void locoObjectBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_locoObjectBackgroundMouseClicked
        Color prevColor = Color.decode("0x" + OCCUPANCY_BACKGROUND);
        Color newColor = JColorChooser.showDialog(null, "Pick a color",
                prevColor);
        if (newColor != null) {
            locoObjectBackground.setBackground(newColor);
            int rgb = newColor.getRGB();
            OCCUPANCY_BACKGROUND = String.format("%06X", rgb).substring(2);
        }
    }//GEN-LAST:event_locoObjectBackgroundMouseClicked

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        int newValue = jSlider1.getValue();
        this.pollingInterval.setText(newValue + "ms");
        if (!jSlider1.getValueIsAdjusting()) {
            Configuration.heartbeatTimeout = newValue;
        }
    }//GEN-LAST:event_jSlider1StateChanged

    private void pauseHeartBeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pauseHeartBeatMouseClicked
        occupancyControllerProxy.setPollingEnabled(false);
        sectionControllerProxy.setPollingEnabled(false);
        turnoutControllerProxy.setPollingEnabled(false);
    }//GEN-LAST:event_pauseHeartBeatMouseClicked

    private void startHeartBeatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_startHeartBeatMouseClicked
        String address = this.mqttAddressField.getText();
        String protocol = this.mqttProtocolField.getText();
        String portText = this.mqttPortField.getText();
        int port = 1883;
        try {
            port = Integer.parseInt(portText);
        } catch (NumberFormatException ex) {
            RailwayWindow.log(
                    "Port cannot be converted to number: " + portText + ". Default value (1883) used instead.");
        }
        String sectionTopic = mqttSectionTopicField.getText();
        String turnoutTopic = mqttTurnoutTopicField.getText();
        String occupancyTopic = mqttOccupancyTopicField.getText();

        Configuration.mqttSectionConfiguration = createMQTTConfiguration(
                sectionTopic, address, protocol, port);
        Configuration.mqttTurnoutConfiguration = createMQTTConfiguration(
                turnoutTopic,
                address, protocol, port);
        Configuration.mqttOccupancyConfiguration = createMQTTConfiguration(
                occupancyTopic,
                address, protocol, port);

        turnoutControllerProxy = new TurnoutControllerProxy();
        sectionControllerProxy = new SectionControllerProxy();
        occupancyControllerProxy = new OccupancyControllerProxy();

        // automatically close settings window
        dispose();
    }//GEN-LAST:event_startHeartBeatMouseClicked

    private MQTTConfiguration createMQTTConfiguration(String topic,
            String address, String protocol, int port) {
        MQTTConfiguration conf = new MQTTConfiguration(topic);
        conf.setAddress(address);
        conf.setProtocol(protocol);
        conf.setPort(port);
        return conf;
    }

    private void turnoutStatusPollingStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_turnoutStatusPollingStateChanged
        turnoutControllerProxy.setPollingEnabled(
                turnoutStatusPolling.isSelected());
    }//GEN-LAST:event_turnoutStatusPollingStateChanged

    private void occupancyStatusPollingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_occupancyStatusPollingMouseClicked
        occupancyControllerProxy.setPollingEnabled(
                occupancyStatusPolling.isSelected());
    }//GEN-LAST:event_occupancyStatusPollingMouseClicked

    private void sectionStatusPollingMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sectionStatusPollingMouseClicked
        sectionControllerProxy.setPollingEnabled(
                sectionStatusPolling.isSelected());
    }//GEN-LAST:event_sectionStatusPollingMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JPanel lockedSectionColor;
    private javax.swing.JPanel locoObjectBackground;
    private javax.swing.JTextField mqttAddressField;
    private javax.swing.JTextField mqttOccupancyTopicField;
    private javax.swing.JTextField mqttPortField;
    private javax.swing.JTextField mqttProtocolField;
    private javax.swing.JTextField mqttSectionTopicField;
    private javax.swing.JTextField mqttTurnoutTopicField;
    private javax.swing.JCheckBox occupancyStatusPolling;
    private javax.swing.JButton pauseHeartBeat;
    private javax.swing.JLabel pollingInterval;
    private javax.swing.JTextField remoteServerIP1;
    private javax.swing.JCheckBox sectionStatusPolling;
    private javax.swing.JButton startHeartBeat;
    private javax.swing.JPanel turnoutActiveBranchColor;
    private javax.swing.JPanel turnoutDeactiveBranchColor;
    private javax.swing.JCheckBox turnoutStatusPolling;
    private javax.swing.JPanel unlockedSectionColor;
    // End of variables declaration//GEN-END:variables

    public static final class OccupancyControllerProxy {

        private final OccupancyRequestSender requestSender;
        private volatile boolean pollingEnabled;

        public OccupancyControllerProxy() {
            this.requestSender = new OccupancyRequestSender(
                    Configuration.mqttOccupancyConfiguration);
            this.pollingEnabled = true;
        }

        public boolean isSectionOccupied(int sectionId) {
            if (pollingEnabled) {
                return requestSender.isSectionOccupied(sectionId);
            } else {
                return false;
            }
        }

        public void setPollingEnabled(boolean pollingEnabled) {
            this.pollingEnabled = pollingEnabled;
        }
    }

    public static class SectionControllerProxy {

        private final SectionRequestSender requestSender;

        public SectionControllerProxy() {
            this.requestSender = new SectionRequestSender(
                    Configuration.mqttSectionConfiguration);
        }

        public void setSectionEnabled(int sectionId) {
            requestSender.enableSection(sectionId);
        }

        public void setSectionDisabled(int sectionId) {
            requestSender.disableSection(sectionId);
        }

        public boolean isSectionEnabled(int sectionId) {
            return requestSender.isSectionEnabled(sectionId);
        }

        public void setPollingEnabled(boolean pollingEnabled) {
            requestSender.setPollingEnabled(pollingEnabled);
        }
    }

    public static class TurnoutControllerProxy {

        private final TurnoutRequestSender requestSender;

        public TurnoutControllerProxy() {
            this.requestSender = new TurnoutRequestSender(
                    Configuration.mqttTurnoutConfiguration);
        }

        public boolean isTurnoutDivergent(int turnoutId) {
            return requestSender.isTurnoutDivergent(turnoutId);
        }

        public boolean isTurnoutStraight(int turnoutId) {
            return requestSender.isTurnoutStraight(turnoutId);
        }

        public void setPollingEnabled(boolean pollingEnabled) {
            requestSender.setPollingEnabled(pollingEnabled);
        }
    }
}
