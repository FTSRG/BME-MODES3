// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "Message.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace modes3 {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* Message_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Message_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_Message_2eproto() {
  protobuf_AddDesc_Message_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "Message.proto");
  GOOGLE_CHECK(file != NULL);
  Message_descriptor_ = file->message_type(0);
  static const int Message_offsets_[20] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, segmentcommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, segmentstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, traincurrentsegment_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, traincurrentspeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, trainreferencespeed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, trainreferencespeedcommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, turnoutcommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, turnoutstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, segmentoccupancy_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, yakindureleaseto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, yakinducangoto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, yakinducannotgoto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, yakindureserveto_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, turnoutreferencecommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, turnoutreferencestate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, trainfunctioncommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, trainfunctionstate_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, dccoperationscommand_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, dccoperationsstate_),
  };
  Message_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Message_descriptor_,
      Message::default_instance_,
      Message_offsets_,
      -1,
      -1,
      -1,
      sizeof(Message),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Message, _is_default_instance_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_Message_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Message_descriptor_, &Message::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_Message_2eproto() {
  delete Message::default_instance_;
  delete Message_reflection_;
}

void protobuf_AddDesc_Message_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::modes3::protobuf::protobuf_AddDesc_DccOperationsCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_DccOperationsState_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_Enums_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_SegmentCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_SegmentState_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainCurrentSegment_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainCurrentSpeed_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainFunctionCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainFunctionState_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainReferenceSpeed_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TrainReferenceSpeedCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TurnoutCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TurnoutState_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TurnoutReferenceCommand_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_TurnoutReferenceState_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_SegmentOccupancy_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_YakinduReleaseTo_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_YakinduCanGoTo_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_YakinduCannotGoTo_2eproto();
  ::modes3::protobuf::protobuf_AddDesc_YakinduReserveTo_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\rMessage.proto\022\017modes3.protobuf\032\032DccOpe"
    "rationsCommand.proto\032\030DccOperationsState"
    ".proto\032\013Enums.proto\032\024SegmentCommand.prot"
    "o\032\022SegmentState.proto\032\031TrainCurrentSegme"
    "nt.proto\032\027TrainCurrentSpeed.proto\032\032Train"
    "FunctionCommand.proto\032\030TrainFunctionStat"
    "e.proto\032\031TrainReferenceSpeed.proto\032 Trai"
    "nReferenceSpeedCommand.proto\032\024TurnoutCom"
    "mand.proto\032\022TurnoutState.proto\032\035TurnoutR"
    "eferenceCommand.proto\032\033TurnoutReferenceS"
    "tate.proto\032\026SegmentOccupancy.proto\032\026Yaki"
    "nduReleaseTo.proto\032\024YakinduCanGoTo.proto"
    "\032\027YakinduCannotGoTo.proto\032\026YakinduReserv"
    "eTo.proto\"\364\t\n\007Message\022*\n\004type\030\001 \001(\0162\034.mo"
    "des3.protobuf.MessageType\0227\n\016segmentComm"
    "and\030\002 \001(\0132\037.modes3.protobuf.SegmentComma"
    "nd\0223\n\014segmentState\030\003 \001(\0132\035.modes3.protob"
    "uf.SegmentState\022A\n\023trainCurrentSegment\030\004"
    " \001(\0132$.modes3.protobuf.TrainCurrentSegme"
    "nt\022=\n\021trainCurrentSpeed\030\005 \001(\0132\".modes3.p"
    "rotobuf.TrainCurrentSpeed\022A\n\023trainRefere"
    "nceSpeed\030\007 \001(\0132$.modes3.protobuf.TrainRe"
    "ferenceSpeed\022O\n\032trainReferenceSpeedComma"
    "nd\030\010 \001(\0132+.modes3.protobuf.TrainReferenc"
    "eSpeedCommand\0227\n\016turnoutCommand\030\t \001(\0132\037."
    "modes3.protobuf.TurnoutCommand\0223\n\014turnou"
    "tState\030\n \001(\0132\035.modes3.protobuf.TurnoutSt"
    "ate\022;\n\020segmentOccupancy\030\013 \001(\0132!.modes3.p"
    "rotobuf.SegmentOccupancy\022;\n\020yakinduRelea"
    "seTo\030\014 \001(\0132!.modes3.protobuf.YakinduRele"
    "aseTo\0227\n\016yakinduCanGoTo\030\r \001(\0132\037.modes3.p"
    "rotobuf.YakinduCanGoTo\022=\n\021yakinduCannotG"
    "oTo\030\016 \001(\0132\".modes3.protobuf.YakinduCanno"
    "tGoTo\022;\n\020yakinduReserveTo\030\017 \001(\0132!.modes3"
    ".protobuf.YakinduReserveTo\022I\n\027turnoutRef"
    "erenceCommand\030\020 \001(\0132(.modes3.protobuf.Tu"
    "rnoutReferenceCommand\022E\n\025turnoutReferenc"
    "eState\030\021 \001(\0132&.modes3.protobuf.TurnoutRe"
    "ferenceState\022C\n\024trainFunctionCommand\030\022 \001"
    "(\0132%.modes3.protobuf.TrainFunctionComman"
    "d\022\?\n\022trainFunctionState\030\023 \001(\0132#.modes3.p"
    "rotobuf.TrainFunctionState\022C\n\024dccOperati"
    "onsCommand\030\024 \001(\0132%.modes3.protobuf.DccOp"
    "erationsCommand\022\?\n\022dccOperationsState\030\025 "
    "\001(\0132#.modes3.protobuf.DccOperationsState"
    "B0\n,hu.bme.mit.inf.modes3.messaging.mms."
    "messagesP\001b\006proto3", 1858);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "Message.proto", &protobuf_RegisterTypes);
  Message::default_instance_ = new Message();
  Message::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_Message_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_Message_2eproto {
  StaticDescriptorInitializer_Message_2eproto() {
    protobuf_AddDesc_Message_2eproto();
  }
} static_descriptor_initializer_Message_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Message::kTypeFieldNumber;
const int Message::kSegmentCommandFieldNumber;
const int Message::kSegmentStateFieldNumber;
const int Message::kTrainCurrentSegmentFieldNumber;
const int Message::kTrainCurrentSpeedFieldNumber;
const int Message::kTrainReferenceSpeedFieldNumber;
const int Message::kTrainReferenceSpeedCommandFieldNumber;
const int Message::kTurnoutCommandFieldNumber;
const int Message::kTurnoutStateFieldNumber;
const int Message::kSegmentOccupancyFieldNumber;
const int Message::kYakinduReleaseToFieldNumber;
const int Message::kYakinduCanGoToFieldNumber;
const int Message::kYakinduCannotGoToFieldNumber;
const int Message::kYakinduReserveToFieldNumber;
const int Message::kTurnoutReferenceCommandFieldNumber;
const int Message::kTurnoutReferenceStateFieldNumber;
const int Message::kTrainFunctionCommandFieldNumber;
const int Message::kTrainFunctionStateFieldNumber;
const int Message::kDccOperationsCommandFieldNumber;
const int Message::kDccOperationsStateFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Message::Message()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.Message)
}

void Message::InitAsDefaultInstance() {
  _is_default_instance_ = true;
  segmentcommand_ = const_cast< ::modes3::protobuf::SegmentCommand*>(&::modes3::protobuf::SegmentCommand::default_instance());
  segmentstate_ = const_cast< ::modes3::protobuf::SegmentState*>(&::modes3::protobuf::SegmentState::default_instance());
  traincurrentsegment_ = const_cast< ::modes3::protobuf::TrainCurrentSegment*>(&::modes3::protobuf::TrainCurrentSegment::default_instance());
  traincurrentspeed_ = const_cast< ::modes3::protobuf::TrainCurrentSpeed*>(&::modes3::protobuf::TrainCurrentSpeed::default_instance());
  trainreferencespeed_ = const_cast< ::modes3::protobuf::TrainReferenceSpeed*>(&::modes3::protobuf::TrainReferenceSpeed::default_instance());
  trainreferencespeedcommand_ = const_cast< ::modes3::protobuf::TrainReferenceSpeedCommand*>(&::modes3::protobuf::TrainReferenceSpeedCommand::default_instance());
  turnoutcommand_ = const_cast< ::modes3::protobuf::TurnoutCommand*>(&::modes3::protobuf::TurnoutCommand::default_instance());
  turnoutstate_ = const_cast< ::modes3::protobuf::TurnoutState*>(&::modes3::protobuf::TurnoutState::default_instance());
  segmentoccupancy_ = const_cast< ::modes3::protobuf::SegmentOccupancy*>(&::modes3::protobuf::SegmentOccupancy::default_instance());
  yakindureleaseto_ = const_cast< ::modes3::protobuf::YakinduReleaseTo*>(&::modes3::protobuf::YakinduReleaseTo::default_instance());
  yakinducangoto_ = const_cast< ::modes3::protobuf::YakinduCanGoTo*>(&::modes3::protobuf::YakinduCanGoTo::default_instance());
  yakinducannotgoto_ = const_cast< ::modes3::protobuf::YakinduCannotGoTo*>(&::modes3::protobuf::YakinduCannotGoTo::default_instance());
  yakindureserveto_ = const_cast< ::modes3::protobuf::YakinduReserveTo*>(&::modes3::protobuf::YakinduReserveTo::default_instance());
  turnoutreferencecommand_ = const_cast< ::modes3::protobuf::TurnoutReferenceCommand*>(&::modes3::protobuf::TurnoutReferenceCommand::default_instance());
  turnoutreferencestate_ = const_cast< ::modes3::protobuf::TurnoutReferenceState*>(&::modes3::protobuf::TurnoutReferenceState::default_instance());
  trainfunctioncommand_ = const_cast< ::modes3::protobuf::TrainFunctionCommand*>(&::modes3::protobuf::TrainFunctionCommand::default_instance());
  trainfunctionstate_ = const_cast< ::modes3::protobuf::TrainFunctionState*>(&::modes3::protobuf::TrainFunctionState::default_instance());
  dccoperationscommand_ = const_cast< ::modes3::protobuf::DccOperationsCommand*>(&::modes3::protobuf::DccOperationsCommand::default_instance());
  dccoperationsstate_ = const_cast< ::modes3::protobuf::DccOperationsState*>(&::modes3::protobuf::DccOperationsState::default_instance());
}

Message::Message(const Message& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.Message)
}

void Message::SharedCtor() {
    _is_default_instance_ = false;
  _cached_size_ = 0;
  type_ = 0;
  segmentcommand_ = NULL;
  segmentstate_ = NULL;
  traincurrentsegment_ = NULL;
  traincurrentspeed_ = NULL;
  trainreferencespeed_ = NULL;
  trainreferencespeedcommand_ = NULL;
  turnoutcommand_ = NULL;
  turnoutstate_ = NULL;
  segmentoccupancy_ = NULL;
  yakindureleaseto_ = NULL;
  yakinducangoto_ = NULL;
  yakinducannotgoto_ = NULL;
  yakindureserveto_ = NULL;
  turnoutreferencecommand_ = NULL;
  turnoutreferencestate_ = NULL;
  trainfunctioncommand_ = NULL;
  trainfunctionstate_ = NULL;
  dccoperationscommand_ = NULL;
  dccoperationsstate_ = NULL;
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (this != default_instance_) {
    delete segmentcommand_;
    delete segmentstate_;
    delete traincurrentsegment_;
    delete traincurrentspeed_;
    delete trainreferencespeed_;
    delete trainreferencespeedcommand_;
    delete turnoutcommand_;
    delete turnoutstate_;
    delete segmentoccupancy_;
    delete yakindureleaseto_;
    delete yakinducangoto_;
    delete yakinducannotgoto_;
    delete yakindureserveto_;
    delete turnoutreferencecommand_;
    delete turnoutreferencestate_;
    delete trainfunctioncommand_;
    delete trainfunctionstate_;
    delete dccoperationscommand_;
    delete dccoperationsstate_;
  }
}

void Message::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Message::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Message_descriptor_;
}

const Message& Message::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_Message_2eproto();
  return *default_instance_;
}

Message* Message::default_instance_ = NULL;

Message* Message::New(::google::protobuf::Arena* arena) const {
  Message* n = new Message;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.Message)
  type_ = 0;
  if (GetArenaNoVirtual() == NULL && segmentcommand_ != NULL) delete segmentcommand_;
  segmentcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && segmentstate_ != NULL) delete segmentstate_;
  segmentstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && traincurrentsegment_ != NULL) delete traincurrentsegment_;
  traincurrentsegment_ = NULL;
  if (GetArenaNoVirtual() == NULL && traincurrentspeed_ != NULL) delete traincurrentspeed_;
  traincurrentspeed_ = NULL;
  if (GetArenaNoVirtual() == NULL && trainreferencespeed_ != NULL) delete trainreferencespeed_;
  trainreferencespeed_ = NULL;
  if (GetArenaNoVirtual() == NULL && trainreferencespeedcommand_ != NULL) delete trainreferencespeedcommand_;
  trainreferencespeedcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && turnoutcommand_ != NULL) delete turnoutcommand_;
  turnoutcommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && turnoutstate_ != NULL) delete turnoutstate_;
  turnoutstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && segmentoccupancy_ != NULL) delete segmentoccupancy_;
  segmentoccupancy_ = NULL;
  if (GetArenaNoVirtual() == NULL && yakindureleaseto_ != NULL) delete yakindureleaseto_;
  yakindureleaseto_ = NULL;
  if (GetArenaNoVirtual() == NULL && yakinducangoto_ != NULL) delete yakinducangoto_;
  yakinducangoto_ = NULL;
  if (GetArenaNoVirtual() == NULL && yakinducannotgoto_ != NULL) delete yakinducannotgoto_;
  yakinducannotgoto_ = NULL;
  if (GetArenaNoVirtual() == NULL && yakindureserveto_ != NULL) delete yakindureserveto_;
  yakindureserveto_ = NULL;
  if (GetArenaNoVirtual() == NULL && turnoutreferencecommand_ != NULL) delete turnoutreferencecommand_;
  turnoutreferencecommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && turnoutreferencestate_ != NULL) delete turnoutreferencestate_;
  turnoutreferencestate_ = NULL;
  if (GetArenaNoVirtual() == NULL && trainfunctioncommand_ != NULL) delete trainfunctioncommand_;
  trainfunctioncommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && trainfunctionstate_ != NULL) delete trainfunctionstate_;
  trainfunctionstate_ = NULL;
  if (GetArenaNoVirtual() == NULL && dccoperationscommand_ != NULL) delete dccoperationscommand_;
  dccoperationscommand_ = NULL;
  if (GetArenaNoVirtual() == NULL && dccoperationsstate_ != NULL) delete dccoperationsstate_;
  dccoperationsstate_ = NULL;
}

bool Message::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.Message)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .modes3.protobuf.MessageType type = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_type(static_cast< ::modes3::protobuf::MessageType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_segmentCommand;
        break;
      }

      // optional .modes3.protobuf.SegmentCommand segmentCommand = 2;
      case 2: {
        if (tag == 18) {
         parse_segmentCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segmentcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_segmentState;
        break;
      }

      // optional .modes3.protobuf.SegmentState segmentState = 3;
      case 3: {
        if (tag == 26) {
         parse_segmentState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segmentstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_trainCurrentSegment;
        break;
      }

      // optional .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
      case 4: {
        if (tag == 34) {
         parse_trainCurrentSegment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_traincurrentsegment()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_trainCurrentSpeed;
        break;
      }

      // optional .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
      case 5: {
        if (tag == 42) {
         parse_trainCurrentSpeed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_traincurrentspeed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(58)) goto parse_trainReferenceSpeed;
        break;
      }

      // optional .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
      case 7: {
        if (tag == 58) {
         parse_trainReferenceSpeed:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trainreferencespeed()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_trainReferenceSpeedCommand;
        break;
      }

      // optional .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
      case 8: {
        if (tag == 66) {
         parse_trainReferenceSpeedCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trainreferencespeedcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_turnoutCommand;
        break;
      }

      // optional .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
      case 9: {
        if (tag == 74) {
         parse_turnoutCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_turnoutcommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_turnoutState;
        break;
      }

      // optional .modes3.protobuf.TurnoutState turnoutState = 10;
      case 10: {
        if (tag == 82) {
         parse_turnoutState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_turnoutstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(90)) goto parse_segmentOccupancy;
        break;
      }

      // optional .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
      case 11: {
        if (tag == 90) {
         parse_segmentOccupancy:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_segmentoccupancy()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(98)) goto parse_yakinduReleaseTo;
        break;
      }

      // optional .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
      case 12: {
        if (tag == 98) {
         parse_yakinduReleaseTo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yakindureleaseto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(106)) goto parse_yakinduCanGoTo;
        break;
      }

      // optional .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
      case 13: {
        if (tag == 106) {
         parse_yakinduCanGoTo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yakinducangoto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(114)) goto parse_yakinduCannotGoTo;
        break;
      }

      // optional .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
      case 14: {
        if (tag == 114) {
         parse_yakinduCannotGoTo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yakinducannotgoto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(122)) goto parse_yakinduReserveTo;
        break;
      }

      // optional .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
      case 15: {
        if (tag == 122) {
         parse_yakinduReserveTo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_yakindureserveto()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(130)) goto parse_turnoutReferenceCommand;
        break;
      }

      // optional .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
      case 16: {
        if (tag == 130) {
         parse_turnoutReferenceCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_turnoutreferencecommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_turnoutReferenceState;
        break;
      }

      // optional .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
      case 17: {
        if (tag == 138) {
         parse_turnoutReferenceState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_turnoutreferencestate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(146)) goto parse_trainFunctionCommand;
        break;
      }

      // optional .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
      case 18: {
        if (tag == 146) {
         parse_trainFunctionCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trainfunctioncommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(154)) goto parse_trainFunctionState;
        break;
      }

      // optional .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
      case 19: {
        if (tag == 154) {
         parse_trainFunctionState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_trainfunctionstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(162)) goto parse_dccOperationsCommand;
        break;
      }

      // optional .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
      case 20: {
        if (tag == 162) {
         parse_dccOperationsCommand:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dccoperationscommand()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(170)) goto parse_dccOperationsState;
        break;
      }

      // optional .modes3.protobuf.DccOperationsState dccOperationsState = 21;
      case 21: {
        if (tag == 170) {
         parse_dccOperationsState:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dccoperationsstate()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.Message)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.Message)
  return false;
#undef DO_
}

void Message::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.Message)
  // optional .modes3.protobuf.MessageType type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional .modes3.protobuf.SegmentCommand segmentCommand = 2;
  if (this->has_segmentcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->segmentcommand_, output);
  }

  // optional .modes3.protobuf.SegmentState segmentState = 3;
  if (this->has_segmentstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->segmentstate_, output);
  }

  // optional .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
  if (this->has_traincurrentsegment()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->traincurrentsegment_, output);
  }

  // optional .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
  if (this->has_traincurrentspeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->traincurrentspeed_, output);
  }

  // optional .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
  if (this->has_trainreferencespeed()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->trainreferencespeed_, output);
  }

  // optional .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
  if (this->has_trainreferencespeedcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->trainreferencespeedcommand_, output);
  }

  // optional .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
  if (this->has_turnoutcommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->turnoutcommand_, output);
  }

  // optional .modes3.protobuf.TurnoutState turnoutState = 10;
  if (this->has_turnoutstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->turnoutstate_, output);
  }

  // optional .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
  if (this->has_segmentoccupancy()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->segmentoccupancy_, output);
  }

  // optional .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
  if (this->has_yakindureleaseto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->yakindureleaseto_, output);
  }

  // optional .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
  if (this->has_yakinducangoto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->yakinducangoto_, output);
  }

  // optional .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
  if (this->has_yakinducannotgoto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->yakinducannotgoto_, output);
  }

  // optional .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
  if (this->has_yakindureserveto()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->yakindureserveto_, output);
  }

  // optional .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
  if (this->has_turnoutreferencecommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->turnoutreferencecommand_, output);
  }

  // optional .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
  if (this->has_turnoutreferencestate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->turnoutreferencestate_, output);
  }

  // optional .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
  if (this->has_trainfunctioncommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->trainfunctioncommand_, output);
  }

  // optional .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
  if (this->has_trainfunctionstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *this->trainfunctionstate_, output);
  }

  // optional .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
  if (this->has_dccoperationscommand()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, *this->dccoperationscommand_, output);
  }

  // optional .modes3.protobuf.DccOperationsState dccOperationsState = 21;
  if (this->has_dccoperationsstate()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *this->dccoperationsstate_, output);
  }

  // @@protoc_insertion_point(serialize_end:modes3.protobuf.Message)
}

::google::protobuf::uint8* Message::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.Message)
  // optional .modes3.protobuf.MessageType type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional .modes3.protobuf.SegmentCommand segmentCommand = 2;
  if (this->has_segmentcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->segmentcommand_, false, target);
  }

  // optional .modes3.protobuf.SegmentState segmentState = 3;
  if (this->has_segmentstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->segmentstate_, false, target);
  }

  // optional .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
  if (this->has_traincurrentsegment()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->traincurrentsegment_, false, target);
  }

  // optional .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
  if (this->has_traincurrentspeed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->traincurrentspeed_, false, target);
  }

  // optional .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
  if (this->has_trainreferencespeed()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->trainreferencespeed_, false, target);
  }

  // optional .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
  if (this->has_trainreferencespeedcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->trainreferencespeedcommand_, false, target);
  }

  // optional .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
  if (this->has_turnoutcommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->turnoutcommand_, false, target);
  }

  // optional .modes3.protobuf.TurnoutState turnoutState = 10;
  if (this->has_turnoutstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->turnoutstate_, false, target);
  }

  // optional .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
  if (this->has_segmentoccupancy()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->segmentoccupancy_, false, target);
  }

  // optional .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
  if (this->has_yakindureleaseto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->yakindureleaseto_, false, target);
  }

  // optional .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
  if (this->has_yakinducangoto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->yakinducangoto_, false, target);
  }

  // optional .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
  if (this->has_yakinducannotgoto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->yakinducannotgoto_, false, target);
  }

  // optional .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
  if (this->has_yakindureserveto()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->yakindureserveto_, false, target);
  }

  // optional .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
  if (this->has_turnoutreferencecommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->turnoutreferencecommand_, false, target);
  }

  // optional .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
  if (this->has_turnoutreferencestate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->turnoutreferencestate_, false, target);
  }

  // optional .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
  if (this->has_trainfunctioncommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->trainfunctioncommand_, false, target);
  }

  // optional .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
  if (this->has_trainfunctionstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        19, *this->trainfunctionstate_, false, target);
  }

  // optional .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
  if (this->has_dccoperationscommand()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, *this->dccoperationscommand_, false, target);
  }

  // optional .modes3.protobuf.DccOperationsState dccOperationsState = 21;
  if (this->has_dccoperationsstate()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        21, *this->dccoperationsstate_, false, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.Message)
  return target;
}

int Message::ByteSize() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.Message)
  int total_size = 0;

  // optional .modes3.protobuf.MessageType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  // optional .modes3.protobuf.SegmentCommand segmentCommand = 2;
  if (this->has_segmentcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->segmentcommand_);
  }

  // optional .modes3.protobuf.SegmentState segmentState = 3;
  if (this->has_segmentstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->segmentstate_);
  }

  // optional .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
  if (this->has_traincurrentsegment()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->traincurrentsegment_);
  }

  // optional .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
  if (this->has_traincurrentspeed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->traincurrentspeed_);
  }

  // optional .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
  if (this->has_trainreferencespeed()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trainreferencespeed_);
  }

  // optional .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
  if (this->has_trainreferencespeedcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trainreferencespeedcommand_);
  }

  // optional .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
  if (this->has_turnoutcommand()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->turnoutcommand_);
  }

  // optional .modes3.protobuf.TurnoutState turnoutState = 10;
  if (this->has_turnoutstate()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->turnoutstate_);
  }

  // optional .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
  if (this->has_segmentoccupancy()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->segmentoccupancy_);
  }

  // optional .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
  if (this->has_yakindureleaseto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yakindureleaseto_);
  }

  // optional .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
  if (this->has_yakinducangoto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yakinducangoto_);
  }

  // optional .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
  if (this->has_yakinducannotgoto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yakinducannotgoto_);
  }

  // optional .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
  if (this->has_yakindureserveto()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->yakindureserveto_);
  }

  // optional .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
  if (this->has_turnoutreferencecommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->turnoutreferencecommand_);
  }

  // optional .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
  if (this->has_turnoutreferencestate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->turnoutreferencestate_);
  }

  // optional .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
  if (this->has_trainfunctioncommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trainfunctioncommand_);
  }

  // optional .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
  if (this->has_trainfunctionstate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->trainfunctionstate_);
  }

  // optional .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
  if (this->has_dccoperationscommand()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dccoperationscommand_);
  }

  // optional .modes3.protobuf.DccOperationsState dccOperationsState = 21;
  if (this->has_dccoperationsstate()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dccoperationsstate_);
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Message::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Message* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Message>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.Message)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.Message)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.has_segmentcommand()) {
    mutable_segmentcommand()->::modes3::protobuf::SegmentCommand::MergeFrom(from.segmentcommand());
  }
  if (from.has_segmentstate()) {
    mutable_segmentstate()->::modes3::protobuf::SegmentState::MergeFrom(from.segmentstate());
  }
  if (from.has_traincurrentsegment()) {
    mutable_traincurrentsegment()->::modes3::protobuf::TrainCurrentSegment::MergeFrom(from.traincurrentsegment());
  }
  if (from.has_traincurrentspeed()) {
    mutable_traincurrentspeed()->::modes3::protobuf::TrainCurrentSpeed::MergeFrom(from.traincurrentspeed());
  }
  if (from.has_trainreferencespeed()) {
    mutable_trainreferencespeed()->::modes3::protobuf::TrainReferenceSpeed::MergeFrom(from.trainreferencespeed());
  }
  if (from.has_trainreferencespeedcommand()) {
    mutable_trainreferencespeedcommand()->::modes3::protobuf::TrainReferenceSpeedCommand::MergeFrom(from.trainreferencespeedcommand());
  }
  if (from.has_turnoutcommand()) {
    mutable_turnoutcommand()->::modes3::protobuf::TurnoutCommand::MergeFrom(from.turnoutcommand());
  }
  if (from.has_turnoutstate()) {
    mutable_turnoutstate()->::modes3::protobuf::TurnoutState::MergeFrom(from.turnoutstate());
  }
  if (from.has_segmentoccupancy()) {
    mutable_segmentoccupancy()->::modes3::protobuf::SegmentOccupancy::MergeFrom(from.segmentoccupancy());
  }
  if (from.has_yakindureleaseto()) {
    mutable_yakindureleaseto()->::modes3::protobuf::YakinduReleaseTo::MergeFrom(from.yakindureleaseto());
  }
  if (from.has_yakinducangoto()) {
    mutable_yakinducangoto()->::modes3::protobuf::YakinduCanGoTo::MergeFrom(from.yakinducangoto());
  }
  if (from.has_yakinducannotgoto()) {
    mutable_yakinducannotgoto()->::modes3::protobuf::YakinduCannotGoTo::MergeFrom(from.yakinducannotgoto());
  }
  if (from.has_yakindureserveto()) {
    mutable_yakindureserveto()->::modes3::protobuf::YakinduReserveTo::MergeFrom(from.yakindureserveto());
  }
  if (from.has_turnoutreferencecommand()) {
    mutable_turnoutreferencecommand()->::modes3::protobuf::TurnoutReferenceCommand::MergeFrom(from.turnoutreferencecommand());
  }
  if (from.has_turnoutreferencestate()) {
    mutable_turnoutreferencestate()->::modes3::protobuf::TurnoutReferenceState::MergeFrom(from.turnoutreferencestate());
  }
  if (from.has_trainfunctioncommand()) {
    mutable_trainfunctioncommand()->::modes3::protobuf::TrainFunctionCommand::MergeFrom(from.trainfunctioncommand());
  }
  if (from.has_trainfunctionstate()) {
    mutable_trainfunctionstate()->::modes3::protobuf::TrainFunctionState::MergeFrom(from.trainfunctionstate());
  }
  if (from.has_dccoperationscommand()) {
    mutable_dccoperationscommand()->::modes3::protobuf::DccOperationsCommand::MergeFrom(from.dccoperationscommand());
  }
  if (from.has_dccoperationsstate()) {
    mutable_dccoperationsstate()->::modes3::protobuf::DccOperationsState::MergeFrom(from.dccoperationsstate());
  }
}

void Message::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {

  return true;
}

void Message::Swap(Message* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Message::InternalSwap(Message* other) {
  std::swap(type_, other->type_);
  std::swap(segmentcommand_, other->segmentcommand_);
  std::swap(segmentstate_, other->segmentstate_);
  std::swap(traincurrentsegment_, other->traincurrentsegment_);
  std::swap(traincurrentspeed_, other->traincurrentspeed_);
  std::swap(trainreferencespeed_, other->trainreferencespeed_);
  std::swap(trainreferencespeedcommand_, other->trainreferencespeedcommand_);
  std::swap(turnoutcommand_, other->turnoutcommand_);
  std::swap(turnoutstate_, other->turnoutstate_);
  std::swap(segmentoccupancy_, other->segmentoccupancy_);
  std::swap(yakindureleaseto_, other->yakindureleaseto_);
  std::swap(yakinducangoto_, other->yakinducangoto_);
  std::swap(yakinducannotgoto_, other->yakinducannotgoto_);
  std::swap(yakindureserveto_, other->yakindureserveto_);
  std::swap(turnoutreferencecommand_, other->turnoutreferencecommand_);
  std::swap(turnoutreferencestate_, other->turnoutreferencestate_);
  std::swap(trainfunctioncommand_, other->trainfunctioncommand_);
  std::swap(trainfunctionstate_, other->trainfunctionstate_);
  std::swap(dccoperationscommand_, other->dccoperationscommand_);
  std::swap(dccoperationsstate_, other->dccoperationsstate_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Message::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Message_descriptor_;
  metadata.reflection = Message_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Message

// optional .modes3.protobuf.MessageType type = 1;
void Message::clear_type() {
  type_ = 0;
}
 ::modes3::protobuf::MessageType Message::type() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.type)
  return static_cast< ::modes3::protobuf::MessageType >(type_);
}
 void Message::set_type(::modes3::protobuf::MessageType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.Message.type)
}

// optional .modes3.protobuf.SegmentCommand segmentCommand = 2;
bool Message::has_segmentcommand() const {
  return !_is_default_instance_ && segmentcommand_ != NULL;
}
void Message::clear_segmentcommand() {
  if (GetArenaNoVirtual() == NULL && segmentcommand_ != NULL) delete segmentcommand_;
  segmentcommand_ = NULL;
}
const ::modes3::protobuf::SegmentCommand& Message::segmentcommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentCommand)
  return segmentcommand_ != NULL ? *segmentcommand_ : *default_instance_->segmentcommand_;
}
::modes3::protobuf::SegmentCommand* Message::mutable_segmentcommand() {
  
  if (segmentcommand_ == NULL) {
    segmentcommand_ = new ::modes3::protobuf::SegmentCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentCommand)
  return segmentcommand_;
}
::modes3::protobuf::SegmentCommand* Message::release_segmentcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentCommand)
  
  ::modes3::protobuf::SegmentCommand* temp = segmentcommand_;
  segmentcommand_ = NULL;
  return temp;
}
void Message::set_allocated_segmentcommand(::modes3::protobuf::SegmentCommand* segmentcommand) {
  delete segmentcommand_;
  segmentcommand_ = segmentcommand;
  if (segmentcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentCommand)
}

// optional .modes3.protobuf.SegmentState segmentState = 3;
bool Message::has_segmentstate() const {
  return !_is_default_instance_ && segmentstate_ != NULL;
}
void Message::clear_segmentstate() {
  if (GetArenaNoVirtual() == NULL && segmentstate_ != NULL) delete segmentstate_;
  segmentstate_ = NULL;
}
const ::modes3::protobuf::SegmentState& Message::segmentstate() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentState)
  return segmentstate_ != NULL ? *segmentstate_ : *default_instance_->segmentstate_;
}
::modes3::protobuf::SegmentState* Message::mutable_segmentstate() {
  
  if (segmentstate_ == NULL) {
    segmentstate_ = new ::modes3::protobuf::SegmentState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentState)
  return segmentstate_;
}
::modes3::protobuf::SegmentState* Message::release_segmentstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentState)
  
  ::modes3::protobuf::SegmentState* temp = segmentstate_;
  segmentstate_ = NULL;
  return temp;
}
void Message::set_allocated_segmentstate(::modes3::protobuf::SegmentState* segmentstate) {
  delete segmentstate_;
  segmentstate_ = segmentstate;
  if (segmentstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentState)
}

// optional .modes3.protobuf.TrainCurrentSegment trainCurrentSegment = 4;
bool Message::has_traincurrentsegment() const {
  return !_is_default_instance_ && traincurrentsegment_ != NULL;
}
void Message::clear_traincurrentsegment() {
  if (GetArenaNoVirtual() == NULL && traincurrentsegment_ != NULL) delete traincurrentsegment_;
  traincurrentsegment_ = NULL;
}
const ::modes3::protobuf::TrainCurrentSegment& Message::traincurrentsegment() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainCurrentSegment)
  return traincurrentsegment_ != NULL ? *traincurrentsegment_ : *default_instance_->traincurrentsegment_;
}
::modes3::protobuf::TrainCurrentSegment* Message::mutable_traincurrentsegment() {
  
  if (traincurrentsegment_ == NULL) {
    traincurrentsegment_ = new ::modes3::protobuf::TrainCurrentSegment;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainCurrentSegment)
  return traincurrentsegment_;
}
::modes3::protobuf::TrainCurrentSegment* Message::release_traincurrentsegment() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainCurrentSegment)
  
  ::modes3::protobuf::TrainCurrentSegment* temp = traincurrentsegment_;
  traincurrentsegment_ = NULL;
  return temp;
}
void Message::set_allocated_traincurrentsegment(::modes3::protobuf::TrainCurrentSegment* traincurrentsegment) {
  delete traincurrentsegment_;
  traincurrentsegment_ = traincurrentsegment;
  if (traincurrentsegment) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainCurrentSegment)
}

// optional .modes3.protobuf.TrainCurrentSpeed trainCurrentSpeed = 5;
bool Message::has_traincurrentspeed() const {
  return !_is_default_instance_ && traincurrentspeed_ != NULL;
}
void Message::clear_traincurrentspeed() {
  if (GetArenaNoVirtual() == NULL && traincurrentspeed_ != NULL) delete traincurrentspeed_;
  traincurrentspeed_ = NULL;
}
const ::modes3::protobuf::TrainCurrentSpeed& Message::traincurrentspeed() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainCurrentSpeed)
  return traincurrentspeed_ != NULL ? *traincurrentspeed_ : *default_instance_->traincurrentspeed_;
}
::modes3::protobuf::TrainCurrentSpeed* Message::mutable_traincurrentspeed() {
  
  if (traincurrentspeed_ == NULL) {
    traincurrentspeed_ = new ::modes3::protobuf::TrainCurrentSpeed;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainCurrentSpeed)
  return traincurrentspeed_;
}
::modes3::protobuf::TrainCurrentSpeed* Message::release_traincurrentspeed() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainCurrentSpeed)
  
  ::modes3::protobuf::TrainCurrentSpeed* temp = traincurrentspeed_;
  traincurrentspeed_ = NULL;
  return temp;
}
void Message::set_allocated_traincurrentspeed(::modes3::protobuf::TrainCurrentSpeed* traincurrentspeed) {
  delete traincurrentspeed_;
  traincurrentspeed_ = traincurrentspeed;
  if (traincurrentspeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainCurrentSpeed)
}

// optional .modes3.protobuf.TrainReferenceSpeed trainReferenceSpeed = 7;
bool Message::has_trainreferencespeed() const {
  return !_is_default_instance_ && trainreferencespeed_ != NULL;
}
void Message::clear_trainreferencespeed() {
  if (GetArenaNoVirtual() == NULL && trainreferencespeed_ != NULL) delete trainreferencespeed_;
  trainreferencespeed_ = NULL;
}
const ::modes3::protobuf::TrainReferenceSpeed& Message::trainreferencespeed() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainReferenceSpeed)
  return trainreferencespeed_ != NULL ? *trainreferencespeed_ : *default_instance_->trainreferencespeed_;
}
::modes3::protobuf::TrainReferenceSpeed* Message::mutable_trainreferencespeed() {
  
  if (trainreferencespeed_ == NULL) {
    trainreferencespeed_ = new ::modes3::protobuf::TrainReferenceSpeed;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainReferenceSpeed)
  return trainreferencespeed_;
}
::modes3::protobuf::TrainReferenceSpeed* Message::release_trainreferencespeed() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainReferenceSpeed)
  
  ::modes3::protobuf::TrainReferenceSpeed* temp = trainreferencespeed_;
  trainreferencespeed_ = NULL;
  return temp;
}
void Message::set_allocated_trainreferencespeed(::modes3::protobuf::TrainReferenceSpeed* trainreferencespeed) {
  delete trainreferencespeed_;
  trainreferencespeed_ = trainreferencespeed;
  if (trainreferencespeed) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainReferenceSpeed)
}

// optional .modes3.protobuf.TrainReferenceSpeedCommand trainReferenceSpeedCommand = 8;
bool Message::has_trainreferencespeedcommand() const {
  return !_is_default_instance_ && trainreferencespeedcommand_ != NULL;
}
void Message::clear_trainreferencespeedcommand() {
  if (GetArenaNoVirtual() == NULL && trainreferencespeedcommand_ != NULL) delete trainreferencespeedcommand_;
  trainreferencespeedcommand_ = NULL;
}
const ::modes3::protobuf::TrainReferenceSpeedCommand& Message::trainreferencespeedcommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainReferenceSpeedCommand)
  return trainreferencespeedcommand_ != NULL ? *trainreferencespeedcommand_ : *default_instance_->trainreferencespeedcommand_;
}
::modes3::protobuf::TrainReferenceSpeedCommand* Message::mutable_trainreferencespeedcommand() {
  
  if (trainreferencespeedcommand_ == NULL) {
    trainreferencespeedcommand_ = new ::modes3::protobuf::TrainReferenceSpeedCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainReferenceSpeedCommand)
  return trainreferencespeedcommand_;
}
::modes3::protobuf::TrainReferenceSpeedCommand* Message::release_trainreferencespeedcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainReferenceSpeedCommand)
  
  ::modes3::protobuf::TrainReferenceSpeedCommand* temp = trainreferencespeedcommand_;
  trainreferencespeedcommand_ = NULL;
  return temp;
}
void Message::set_allocated_trainreferencespeedcommand(::modes3::protobuf::TrainReferenceSpeedCommand* trainreferencespeedcommand) {
  delete trainreferencespeedcommand_;
  trainreferencespeedcommand_ = trainreferencespeedcommand;
  if (trainreferencespeedcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainReferenceSpeedCommand)
}

// optional .modes3.protobuf.TurnoutCommand turnoutCommand = 9;
bool Message::has_turnoutcommand() const {
  return !_is_default_instance_ && turnoutcommand_ != NULL;
}
void Message::clear_turnoutcommand() {
  if (GetArenaNoVirtual() == NULL && turnoutcommand_ != NULL) delete turnoutcommand_;
  turnoutcommand_ = NULL;
}
const ::modes3::protobuf::TurnoutCommand& Message::turnoutcommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutCommand)
  return turnoutcommand_ != NULL ? *turnoutcommand_ : *default_instance_->turnoutcommand_;
}
::modes3::protobuf::TurnoutCommand* Message::mutable_turnoutcommand() {
  
  if (turnoutcommand_ == NULL) {
    turnoutcommand_ = new ::modes3::protobuf::TurnoutCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutCommand)
  return turnoutcommand_;
}
::modes3::protobuf::TurnoutCommand* Message::release_turnoutcommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutCommand)
  
  ::modes3::protobuf::TurnoutCommand* temp = turnoutcommand_;
  turnoutcommand_ = NULL;
  return temp;
}
void Message::set_allocated_turnoutcommand(::modes3::protobuf::TurnoutCommand* turnoutcommand) {
  delete turnoutcommand_;
  turnoutcommand_ = turnoutcommand;
  if (turnoutcommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutCommand)
}

// optional .modes3.protobuf.TurnoutState turnoutState = 10;
bool Message::has_turnoutstate() const {
  return !_is_default_instance_ && turnoutstate_ != NULL;
}
void Message::clear_turnoutstate() {
  if (GetArenaNoVirtual() == NULL && turnoutstate_ != NULL) delete turnoutstate_;
  turnoutstate_ = NULL;
}
const ::modes3::protobuf::TurnoutState& Message::turnoutstate() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutState)
  return turnoutstate_ != NULL ? *turnoutstate_ : *default_instance_->turnoutstate_;
}
::modes3::protobuf::TurnoutState* Message::mutable_turnoutstate() {
  
  if (turnoutstate_ == NULL) {
    turnoutstate_ = new ::modes3::protobuf::TurnoutState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutState)
  return turnoutstate_;
}
::modes3::protobuf::TurnoutState* Message::release_turnoutstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutState)
  
  ::modes3::protobuf::TurnoutState* temp = turnoutstate_;
  turnoutstate_ = NULL;
  return temp;
}
void Message::set_allocated_turnoutstate(::modes3::protobuf::TurnoutState* turnoutstate) {
  delete turnoutstate_;
  turnoutstate_ = turnoutstate;
  if (turnoutstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutState)
}

// optional .modes3.protobuf.SegmentOccupancy segmentOccupancy = 11;
bool Message::has_segmentoccupancy() const {
  return !_is_default_instance_ && segmentoccupancy_ != NULL;
}
void Message::clear_segmentoccupancy() {
  if (GetArenaNoVirtual() == NULL && segmentoccupancy_ != NULL) delete segmentoccupancy_;
  segmentoccupancy_ = NULL;
}
const ::modes3::protobuf::SegmentOccupancy& Message::segmentoccupancy() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.segmentOccupancy)
  return segmentoccupancy_ != NULL ? *segmentoccupancy_ : *default_instance_->segmentoccupancy_;
}
::modes3::protobuf::SegmentOccupancy* Message::mutable_segmentoccupancy() {
  
  if (segmentoccupancy_ == NULL) {
    segmentoccupancy_ = new ::modes3::protobuf::SegmentOccupancy;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.segmentOccupancy)
  return segmentoccupancy_;
}
::modes3::protobuf::SegmentOccupancy* Message::release_segmentoccupancy() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.segmentOccupancy)
  
  ::modes3::protobuf::SegmentOccupancy* temp = segmentoccupancy_;
  segmentoccupancy_ = NULL;
  return temp;
}
void Message::set_allocated_segmentoccupancy(::modes3::protobuf::SegmentOccupancy* segmentoccupancy) {
  delete segmentoccupancy_;
  segmentoccupancy_ = segmentoccupancy;
  if (segmentoccupancy) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.segmentOccupancy)
}

// optional .modes3.protobuf.YakinduReleaseTo yakinduReleaseTo = 12;
bool Message::has_yakindureleaseto() const {
  return !_is_default_instance_ && yakindureleaseto_ != NULL;
}
void Message::clear_yakindureleaseto() {
  if (GetArenaNoVirtual() == NULL && yakindureleaseto_ != NULL) delete yakindureleaseto_;
  yakindureleaseto_ = NULL;
}
const ::modes3::protobuf::YakinduReleaseTo& Message::yakindureleaseto() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduReleaseTo)
  return yakindureleaseto_ != NULL ? *yakindureleaseto_ : *default_instance_->yakindureleaseto_;
}
::modes3::protobuf::YakinduReleaseTo* Message::mutable_yakindureleaseto() {
  
  if (yakindureleaseto_ == NULL) {
    yakindureleaseto_ = new ::modes3::protobuf::YakinduReleaseTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduReleaseTo)
  return yakindureleaseto_;
}
::modes3::protobuf::YakinduReleaseTo* Message::release_yakindureleaseto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduReleaseTo)
  
  ::modes3::protobuf::YakinduReleaseTo* temp = yakindureleaseto_;
  yakindureleaseto_ = NULL;
  return temp;
}
void Message::set_allocated_yakindureleaseto(::modes3::protobuf::YakinduReleaseTo* yakindureleaseto) {
  delete yakindureleaseto_;
  yakindureleaseto_ = yakindureleaseto;
  if (yakindureleaseto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduReleaseTo)
}

// optional .modes3.protobuf.YakinduCanGoTo yakinduCanGoTo = 13;
bool Message::has_yakinducangoto() const {
  return !_is_default_instance_ && yakinducangoto_ != NULL;
}
void Message::clear_yakinducangoto() {
  if (GetArenaNoVirtual() == NULL && yakinducangoto_ != NULL) delete yakinducangoto_;
  yakinducangoto_ = NULL;
}
const ::modes3::protobuf::YakinduCanGoTo& Message::yakinducangoto() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduCanGoTo)
  return yakinducangoto_ != NULL ? *yakinducangoto_ : *default_instance_->yakinducangoto_;
}
::modes3::protobuf::YakinduCanGoTo* Message::mutable_yakinducangoto() {
  
  if (yakinducangoto_ == NULL) {
    yakinducangoto_ = new ::modes3::protobuf::YakinduCanGoTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduCanGoTo)
  return yakinducangoto_;
}
::modes3::protobuf::YakinduCanGoTo* Message::release_yakinducangoto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduCanGoTo)
  
  ::modes3::protobuf::YakinduCanGoTo* temp = yakinducangoto_;
  yakinducangoto_ = NULL;
  return temp;
}
void Message::set_allocated_yakinducangoto(::modes3::protobuf::YakinduCanGoTo* yakinducangoto) {
  delete yakinducangoto_;
  yakinducangoto_ = yakinducangoto;
  if (yakinducangoto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduCanGoTo)
}

// optional .modes3.protobuf.YakinduCannotGoTo yakinduCannotGoTo = 14;
bool Message::has_yakinducannotgoto() const {
  return !_is_default_instance_ && yakinducannotgoto_ != NULL;
}
void Message::clear_yakinducannotgoto() {
  if (GetArenaNoVirtual() == NULL && yakinducannotgoto_ != NULL) delete yakinducannotgoto_;
  yakinducannotgoto_ = NULL;
}
const ::modes3::protobuf::YakinduCannotGoTo& Message::yakinducannotgoto() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduCannotGoTo)
  return yakinducannotgoto_ != NULL ? *yakinducannotgoto_ : *default_instance_->yakinducannotgoto_;
}
::modes3::protobuf::YakinduCannotGoTo* Message::mutable_yakinducannotgoto() {
  
  if (yakinducannotgoto_ == NULL) {
    yakinducannotgoto_ = new ::modes3::protobuf::YakinduCannotGoTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduCannotGoTo)
  return yakinducannotgoto_;
}
::modes3::protobuf::YakinduCannotGoTo* Message::release_yakinducannotgoto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduCannotGoTo)
  
  ::modes3::protobuf::YakinduCannotGoTo* temp = yakinducannotgoto_;
  yakinducannotgoto_ = NULL;
  return temp;
}
void Message::set_allocated_yakinducannotgoto(::modes3::protobuf::YakinduCannotGoTo* yakinducannotgoto) {
  delete yakinducannotgoto_;
  yakinducannotgoto_ = yakinducannotgoto;
  if (yakinducannotgoto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduCannotGoTo)
}

// optional .modes3.protobuf.YakinduReserveTo yakinduReserveTo = 15;
bool Message::has_yakindureserveto() const {
  return !_is_default_instance_ && yakindureserveto_ != NULL;
}
void Message::clear_yakindureserveto() {
  if (GetArenaNoVirtual() == NULL && yakindureserveto_ != NULL) delete yakindureserveto_;
  yakindureserveto_ = NULL;
}
const ::modes3::protobuf::YakinduReserveTo& Message::yakindureserveto() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.yakinduReserveTo)
  return yakindureserveto_ != NULL ? *yakindureserveto_ : *default_instance_->yakindureserveto_;
}
::modes3::protobuf::YakinduReserveTo* Message::mutable_yakindureserveto() {
  
  if (yakindureserveto_ == NULL) {
    yakindureserveto_ = new ::modes3::protobuf::YakinduReserveTo;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.yakinduReserveTo)
  return yakindureserveto_;
}
::modes3::protobuf::YakinduReserveTo* Message::release_yakindureserveto() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.yakinduReserveTo)
  
  ::modes3::protobuf::YakinduReserveTo* temp = yakindureserveto_;
  yakindureserveto_ = NULL;
  return temp;
}
void Message::set_allocated_yakindureserveto(::modes3::protobuf::YakinduReserveTo* yakindureserveto) {
  delete yakindureserveto_;
  yakindureserveto_ = yakindureserveto;
  if (yakindureserveto) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.yakinduReserveTo)
}

// optional .modes3.protobuf.TurnoutReferenceCommand turnoutReferenceCommand = 16;
bool Message::has_turnoutreferencecommand() const {
  return !_is_default_instance_ && turnoutreferencecommand_ != NULL;
}
void Message::clear_turnoutreferencecommand() {
  if (GetArenaNoVirtual() == NULL && turnoutreferencecommand_ != NULL) delete turnoutreferencecommand_;
  turnoutreferencecommand_ = NULL;
}
const ::modes3::protobuf::TurnoutReferenceCommand& Message::turnoutreferencecommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutReferenceCommand)
  return turnoutreferencecommand_ != NULL ? *turnoutreferencecommand_ : *default_instance_->turnoutreferencecommand_;
}
::modes3::protobuf::TurnoutReferenceCommand* Message::mutable_turnoutreferencecommand() {
  
  if (turnoutreferencecommand_ == NULL) {
    turnoutreferencecommand_ = new ::modes3::protobuf::TurnoutReferenceCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutReferenceCommand)
  return turnoutreferencecommand_;
}
::modes3::protobuf::TurnoutReferenceCommand* Message::release_turnoutreferencecommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutReferenceCommand)
  
  ::modes3::protobuf::TurnoutReferenceCommand* temp = turnoutreferencecommand_;
  turnoutreferencecommand_ = NULL;
  return temp;
}
void Message::set_allocated_turnoutreferencecommand(::modes3::protobuf::TurnoutReferenceCommand* turnoutreferencecommand) {
  delete turnoutreferencecommand_;
  turnoutreferencecommand_ = turnoutreferencecommand;
  if (turnoutreferencecommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutReferenceCommand)
}

// optional .modes3.protobuf.TurnoutReferenceState turnoutReferenceState = 17;
bool Message::has_turnoutreferencestate() const {
  return !_is_default_instance_ && turnoutreferencestate_ != NULL;
}
void Message::clear_turnoutreferencestate() {
  if (GetArenaNoVirtual() == NULL && turnoutreferencestate_ != NULL) delete turnoutreferencestate_;
  turnoutreferencestate_ = NULL;
}
const ::modes3::protobuf::TurnoutReferenceState& Message::turnoutreferencestate() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.turnoutReferenceState)
  return turnoutreferencestate_ != NULL ? *turnoutreferencestate_ : *default_instance_->turnoutreferencestate_;
}
::modes3::protobuf::TurnoutReferenceState* Message::mutable_turnoutreferencestate() {
  
  if (turnoutreferencestate_ == NULL) {
    turnoutreferencestate_ = new ::modes3::protobuf::TurnoutReferenceState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.turnoutReferenceState)
  return turnoutreferencestate_;
}
::modes3::protobuf::TurnoutReferenceState* Message::release_turnoutreferencestate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.turnoutReferenceState)
  
  ::modes3::protobuf::TurnoutReferenceState* temp = turnoutreferencestate_;
  turnoutreferencestate_ = NULL;
  return temp;
}
void Message::set_allocated_turnoutreferencestate(::modes3::protobuf::TurnoutReferenceState* turnoutreferencestate) {
  delete turnoutreferencestate_;
  turnoutreferencestate_ = turnoutreferencestate;
  if (turnoutreferencestate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.turnoutReferenceState)
}

// optional .modes3.protobuf.TrainFunctionCommand trainFunctionCommand = 18;
bool Message::has_trainfunctioncommand() const {
  return !_is_default_instance_ && trainfunctioncommand_ != NULL;
}
void Message::clear_trainfunctioncommand() {
  if (GetArenaNoVirtual() == NULL && trainfunctioncommand_ != NULL) delete trainfunctioncommand_;
  trainfunctioncommand_ = NULL;
}
const ::modes3::protobuf::TrainFunctionCommand& Message::trainfunctioncommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainFunctionCommand)
  return trainfunctioncommand_ != NULL ? *trainfunctioncommand_ : *default_instance_->trainfunctioncommand_;
}
::modes3::protobuf::TrainFunctionCommand* Message::mutable_trainfunctioncommand() {
  
  if (trainfunctioncommand_ == NULL) {
    trainfunctioncommand_ = new ::modes3::protobuf::TrainFunctionCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainFunctionCommand)
  return trainfunctioncommand_;
}
::modes3::protobuf::TrainFunctionCommand* Message::release_trainfunctioncommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainFunctionCommand)
  
  ::modes3::protobuf::TrainFunctionCommand* temp = trainfunctioncommand_;
  trainfunctioncommand_ = NULL;
  return temp;
}
void Message::set_allocated_trainfunctioncommand(::modes3::protobuf::TrainFunctionCommand* trainfunctioncommand) {
  delete trainfunctioncommand_;
  trainfunctioncommand_ = trainfunctioncommand;
  if (trainfunctioncommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainFunctionCommand)
}

// optional .modes3.protobuf.TrainFunctionState trainFunctionState = 19;
bool Message::has_trainfunctionstate() const {
  return !_is_default_instance_ && trainfunctionstate_ != NULL;
}
void Message::clear_trainfunctionstate() {
  if (GetArenaNoVirtual() == NULL && trainfunctionstate_ != NULL) delete trainfunctionstate_;
  trainfunctionstate_ = NULL;
}
const ::modes3::protobuf::TrainFunctionState& Message::trainfunctionstate() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.trainFunctionState)
  return trainfunctionstate_ != NULL ? *trainfunctionstate_ : *default_instance_->trainfunctionstate_;
}
::modes3::protobuf::TrainFunctionState* Message::mutable_trainfunctionstate() {
  
  if (trainfunctionstate_ == NULL) {
    trainfunctionstate_ = new ::modes3::protobuf::TrainFunctionState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.trainFunctionState)
  return trainfunctionstate_;
}
::modes3::protobuf::TrainFunctionState* Message::release_trainfunctionstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.trainFunctionState)
  
  ::modes3::protobuf::TrainFunctionState* temp = trainfunctionstate_;
  trainfunctionstate_ = NULL;
  return temp;
}
void Message::set_allocated_trainfunctionstate(::modes3::protobuf::TrainFunctionState* trainfunctionstate) {
  delete trainfunctionstate_;
  trainfunctionstate_ = trainfunctionstate;
  if (trainfunctionstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.trainFunctionState)
}

// optional .modes3.protobuf.DccOperationsCommand dccOperationsCommand = 20;
bool Message::has_dccoperationscommand() const {
  return !_is_default_instance_ && dccoperationscommand_ != NULL;
}
void Message::clear_dccoperationscommand() {
  if (GetArenaNoVirtual() == NULL && dccoperationscommand_ != NULL) delete dccoperationscommand_;
  dccoperationscommand_ = NULL;
}
const ::modes3::protobuf::DccOperationsCommand& Message::dccoperationscommand() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.dccOperationsCommand)
  return dccoperationscommand_ != NULL ? *dccoperationscommand_ : *default_instance_->dccoperationscommand_;
}
::modes3::protobuf::DccOperationsCommand* Message::mutable_dccoperationscommand() {
  
  if (dccoperationscommand_ == NULL) {
    dccoperationscommand_ = new ::modes3::protobuf::DccOperationsCommand;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.dccOperationsCommand)
  return dccoperationscommand_;
}
::modes3::protobuf::DccOperationsCommand* Message::release_dccoperationscommand() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.dccOperationsCommand)
  
  ::modes3::protobuf::DccOperationsCommand* temp = dccoperationscommand_;
  dccoperationscommand_ = NULL;
  return temp;
}
void Message::set_allocated_dccoperationscommand(::modes3::protobuf::DccOperationsCommand* dccoperationscommand) {
  delete dccoperationscommand_;
  dccoperationscommand_ = dccoperationscommand;
  if (dccoperationscommand) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.dccOperationsCommand)
}

// optional .modes3.protobuf.DccOperationsState dccOperationsState = 21;
bool Message::has_dccoperationsstate() const {
  return !_is_default_instance_ && dccoperationsstate_ != NULL;
}
void Message::clear_dccoperationsstate() {
  if (GetArenaNoVirtual() == NULL && dccoperationsstate_ != NULL) delete dccoperationsstate_;
  dccoperationsstate_ = NULL;
}
const ::modes3::protobuf::DccOperationsState& Message::dccoperationsstate() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.Message.dccOperationsState)
  return dccoperationsstate_ != NULL ? *dccoperationsstate_ : *default_instance_->dccoperationsstate_;
}
::modes3::protobuf::DccOperationsState* Message::mutable_dccoperationsstate() {
  
  if (dccoperationsstate_ == NULL) {
    dccoperationsstate_ = new ::modes3::protobuf::DccOperationsState;
  }
  // @@protoc_insertion_point(field_mutable:modes3.protobuf.Message.dccOperationsState)
  return dccoperationsstate_;
}
::modes3::protobuf::DccOperationsState* Message::release_dccoperationsstate() {
  // @@protoc_insertion_point(field_release:modes3.protobuf.Message.dccOperationsState)
  
  ::modes3::protobuf::DccOperationsState* temp = dccoperationsstate_;
  dccoperationsstate_ = NULL;
  return temp;
}
void Message::set_allocated_dccoperationsstate(::modes3::protobuf::DccOperationsState* dccoperationsstate) {
  delete dccoperationsstate_;
  dccoperationsstate_ = dccoperationsstate;
  if (dccoperationsstate) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:modes3.protobuf.Message.dccOperationsState)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)
