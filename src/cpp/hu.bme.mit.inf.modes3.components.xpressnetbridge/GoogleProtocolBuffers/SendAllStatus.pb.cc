// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendAllStatus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SendAllStatus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace modes3 {
namespace protobuf {

namespace {

const ::google::protobuf::Descriptor* SendAllStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  SendAllStatus_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SendAllStatus_2eproto() GOOGLE_ATTRIBUTE_COLD;
void protobuf_AssignDesc_SendAllStatus_2eproto() {
  protobuf_AddDesc_SendAllStatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SendAllStatus.proto");
  GOOGLE_CHECK(file != NULL);
  SendAllStatus_descriptor_ = file->message_type(0);
  static const int SendAllStatus_offsets_[1] = {
  };
  SendAllStatus_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      SendAllStatus_descriptor_,
      SendAllStatus::internal_default_instance(),
      SendAllStatus_offsets_,
      -1,
      -1,
      -1,
      sizeof(SendAllStatus),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SendAllStatus, _internal_metadata_));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SendAllStatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      SendAllStatus_descriptor_, SendAllStatus::internal_default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SendAllStatus_2eproto() {
  SendAllStatus_default_instance_.Shutdown();
  delete SendAllStatus_reflection_;
}

void protobuf_InitDefaults_SendAllStatus_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::modes3::protobuf::protobuf_InitDefaults_Enums_2eproto();
  SendAllStatus_default_instance_.DefaultConstruct();
  SendAllStatus_default_instance_.get_mutable()->InitAsDefaultInstance();
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_InitDefaults_SendAllStatus_2eproto_once_);
void protobuf_InitDefaults_SendAllStatus_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_InitDefaults_SendAllStatus_2eproto_once_,
                 &protobuf_InitDefaults_SendAllStatus_2eproto_impl);
}
void protobuf_AddDesc_SendAllStatus_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  protobuf_InitDefaults_SendAllStatus_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\023SendAllStatus.proto\022\017modes3.protobuf\032\013"
    "Enums.proto\"\017\n\rSendAllStatusB0\n,hu.bme.m"
    "it.inf.modes3.messaging.mms.messagesP\001b\006"
    "proto3", 126);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SendAllStatus.proto", &protobuf_RegisterTypes);
  ::modes3::protobuf::protobuf_AddDesc_Enums_2eproto();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SendAllStatus_2eproto);
}

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_SendAllStatus_2eproto_once_);
void protobuf_AddDesc_SendAllStatus_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_SendAllStatus_2eproto_once_,
                 &protobuf_AddDesc_SendAllStatus_2eproto_impl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SendAllStatus_2eproto {
  StaticDescriptorInitializer_SendAllStatus_2eproto() {
    protobuf_AddDesc_SendAllStatus_2eproto();
  }
} static_descriptor_initializer_SendAllStatus_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD GOOGLE_ATTRIBUTE_NORETURN;
static void MergeFromFail(int line) {
  ::google::protobuf::internal::MergeFromFail(__FILE__, line);
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SendAllStatus::SendAllStatus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (this != internal_default_instance()) protobuf_InitDefaults_SendAllStatus_2eproto();
  SharedCtor();
  // @@protoc_insertion_point(constructor:modes3.protobuf.SendAllStatus)
}

void SendAllStatus::InitAsDefaultInstance() {
}

SendAllStatus::SendAllStatus(const SendAllStatus& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  UnsafeMergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:modes3.protobuf.SendAllStatus)
}

void SendAllStatus::SharedCtor() {
  _cached_size_ = 0;
}

SendAllStatus::~SendAllStatus() {
  // @@protoc_insertion_point(destructor:modes3.protobuf.SendAllStatus)
  SharedDtor();
}

void SendAllStatus::SharedDtor() {
}

void SendAllStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SendAllStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return SendAllStatus_descriptor_;
}

const SendAllStatus& SendAllStatus::default_instance() {
  protobuf_InitDefaults_SendAllStatus_2eproto();
  return *internal_default_instance();
}

::google::protobuf::internal::ExplicitlyConstructed<SendAllStatus> SendAllStatus_default_instance_;

SendAllStatus* SendAllStatus::New(::google::protobuf::Arena* arena) const {
  SendAllStatus* n = new SendAllStatus;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SendAllStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:modes3.protobuf.SendAllStatus)
}

bool SendAllStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:modes3.protobuf.SendAllStatus)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0 ||
        ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
  }
success:
  // @@protoc_insertion_point(parse_success:modes3.protobuf.SendAllStatus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:modes3.protobuf.SendAllStatus)
  return false;
#undef DO_
}

void SendAllStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:modes3.protobuf.SendAllStatus)
  // @@protoc_insertion_point(serialize_end:modes3.protobuf.SendAllStatus)
}

::google::protobuf::uint8* SendAllStatus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:modes3.protobuf.SendAllStatus)
  // @@protoc_insertion_point(serialize_to_array_end:modes3.protobuf.SendAllStatus)
  return target;
}

size_t SendAllStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:modes3.protobuf.SendAllStatus)
  size_t total_size = 0;

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SendAllStatus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:modes3.protobuf.SendAllStatus)
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const SendAllStatus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SendAllStatus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:modes3.protobuf.SendAllStatus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:modes3.protobuf.SendAllStatus)
    UnsafeMergeFrom(*source);
  }
}

void SendAllStatus::MergeFrom(const SendAllStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:modes3.protobuf.SendAllStatus)
  if (GOOGLE_PREDICT_TRUE(&from != this)) {
    UnsafeMergeFrom(from);
  } else {
    MergeFromFail(__LINE__);
  }
}

void SendAllStatus::UnsafeMergeFrom(const SendAllStatus& from) {
  GOOGLE_DCHECK(&from != this);
}

void SendAllStatus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:modes3.protobuf.SendAllStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SendAllStatus::CopyFrom(const SendAllStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:modes3.protobuf.SendAllStatus)
  if (&from == this) return;
  Clear();
  UnsafeMergeFrom(from);
}

bool SendAllStatus::IsInitialized() const {

  return true;
}

void SendAllStatus::Swap(SendAllStatus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SendAllStatus::InternalSwap(SendAllStatus* other) {
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SendAllStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = SendAllStatus_descriptor_;
  metadata.reflection = SendAllStatus_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SendAllStatus

inline const SendAllStatus* SendAllStatus::internal_default_instance() {
  return &SendAllStatus_default_instance_.get();
}
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)
