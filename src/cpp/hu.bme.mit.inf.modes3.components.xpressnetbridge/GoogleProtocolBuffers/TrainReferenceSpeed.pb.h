// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TrainReferenceSpeed.proto

#ifndef PROTOBUF_TrainReferenceSpeed_2eproto__INCLUDED
#define PROTOBUF_TrainReferenceSpeed_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3001000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3001000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Enums.pb.h"
// @@protoc_insertion_point(includes)

namespace modes3 {
namespace protobuf {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_TrainReferenceSpeed_2eproto();
void protobuf_InitDefaults_TrainReferenceSpeed_2eproto();
void protobuf_AssignDesc_TrainReferenceSpeed_2eproto();
void protobuf_ShutdownFile_TrainReferenceSpeed_2eproto();

class TrainReferenceSpeed;

// ===================================================================

class TrainReferenceSpeed : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:modes3.protobuf.TrainReferenceSpeed) */ {
 public:
  TrainReferenceSpeed();
  virtual ~TrainReferenceSpeed();

  TrainReferenceSpeed(const TrainReferenceSpeed& from);

  inline TrainReferenceSpeed& operator=(const TrainReferenceSpeed& from) {
    CopyFrom(from);
    return *this;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const TrainReferenceSpeed& default_instance();

  static const TrainReferenceSpeed* internal_default_instance();

  void Swap(TrainReferenceSpeed* other);

  // implements Message ----------------------------------------------

  inline TrainReferenceSpeed* New() const { return New(NULL); }

  TrainReferenceSpeed* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const TrainReferenceSpeed& from);
  void MergeFrom(const TrainReferenceSpeed& from);
  void Clear();
  bool IsInitialized() const;

  size_t ByteSizeLong() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const {
    return InternalSerializeWithCachedSizesToArray(false, output);
  }
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(TrainReferenceSpeed* other);
  void UnsafeMergeFrom(const TrainReferenceSpeed& from);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 trainID = 1;
  void clear_trainid();
  static const int kTrainIDFieldNumber = 1;
  ::google::protobuf::uint32 trainid() const;
  void set_trainid(::google::protobuf::uint32 value);

  // optional int32 referenceSpeed = 2;
  void clear_referencespeed();
  static const int kReferenceSpeedFieldNumber = 2;
  ::google::protobuf::int32 referencespeed() const;
  void set_referencespeed(::google::protobuf::int32 value);

  // optional .modes3.protobuf.TrainDirectionValue direction = 3;
  void clear_direction();
  static const int kDirectionFieldNumber = 3;
  ::modes3::protobuf::TrainDirectionValue direction() const;
  void set_direction(::modes3::protobuf::TrainDirectionValue value);

  // @@protoc_insertion_point(class_scope:modes3.protobuf.TrainReferenceSpeed)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 trainid_;
  ::google::protobuf::int32 referencespeed_;
  int direction_;
  mutable int _cached_size_;
  friend void  protobuf_InitDefaults_TrainReferenceSpeed_2eproto_impl();
  friend void  protobuf_AddDesc_TrainReferenceSpeed_2eproto_impl();
  friend void protobuf_AssignDesc_TrainReferenceSpeed_2eproto();
  friend void protobuf_ShutdownFile_TrainReferenceSpeed_2eproto();

  void InitAsDefaultInstance();
};
extern ::google::protobuf::internal::ExplicitlyConstructed<TrainReferenceSpeed> TrainReferenceSpeed_default_instance_;

// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// TrainReferenceSpeed

// optional uint32 trainID = 1;
inline void TrainReferenceSpeed::clear_trainid() {
  trainid_ = 0u;
}
inline ::google::protobuf::uint32 TrainReferenceSpeed::trainid() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TrainReferenceSpeed.trainID)
  return trainid_;
}
inline void TrainReferenceSpeed::set_trainid(::google::protobuf::uint32 value) {
  
  trainid_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TrainReferenceSpeed.trainID)
}

// optional int32 referenceSpeed = 2;
inline void TrainReferenceSpeed::clear_referencespeed() {
  referencespeed_ = 0;
}
inline ::google::protobuf::int32 TrainReferenceSpeed::referencespeed() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TrainReferenceSpeed.referenceSpeed)
  return referencespeed_;
}
inline void TrainReferenceSpeed::set_referencespeed(::google::protobuf::int32 value) {
  
  referencespeed_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TrainReferenceSpeed.referenceSpeed)
}

// optional .modes3.protobuf.TrainDirectionValue direction = 3;
inline void TrainReferenceSpeed::clear_direction() {
  direction_ = 0;
}
inline ::modes3::protobuf::TrainDirectionValue TrainReferenceSpeed::direction() const {
  // @@protoc_insertion_point(field_get:modes3.protobuf.TrainReferenceSpeed.direction)
  return static_cast< ::modes3::protobuf::TrainDirectionValue >(direction_);
}
inline void TrainReferenceSpeed::set_direction(::modes3::protobuf::TrainDirectionValue value) {
  
  direction_ = value;
  // @@protoc_insertion_point(field_set:modes3.protobuf.TrainReferenceSpeed.direction)
}

inline const TrainReferenceSpeed* TrainReferenceSpeed::internal_default_instance() {
  return &TrainReferenceSpeed_default_instance_.get();
}
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace modes3

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_TrainReferenceSpeed_2eproto__INCLUDED
