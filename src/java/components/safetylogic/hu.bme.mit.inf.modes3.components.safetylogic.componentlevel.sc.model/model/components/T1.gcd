import Section
import Turnout

package t1

sync T1Component [
	// Ports on the borders of the zone
	port T1ProtocolProvidedDivergent : provides Protocol,
	port T1ProtocolRequiredDivergent : requires Protocol,
	
	port S15ProtocolProvidedCW : provides Protocol,
	port S15ProtocolRequiredCW : requires Protocol,
	
	port S12ProtocolProvidedCCW : provides Protocol,
	port S12ProtocolRequiredCCW : requires Protocol,
	
	// Control ports, needed for all elements
	port S15ControlProvided : provides Control,
	port T1TurnoutProvided : provides Turnout,
	port S12ControlProvided : provides Control,
	
	// Train ports, needed for all elements
	port S15TrainRequired : requires Train,
	port T1TrainRequired : requires Train,
	port S12TrainRequired : requires Train
] {
	component S15 : SectionStatechart
	component T1 : TurnoutStatechart
	component S12 : SectionStatechart
		
	// Binding system ports on the border to the elements
	bind T1ProtocolProvidedDivergent -> T1.ProtocolProvidedDivergent
	bind T1ProtocolRequiredDivergent -> T1.ProtocolRequiredDivergent
			
	bind S15ProtocolProvidedCW -> S15.ProtocolProvidedCW
	bind S15ProtocolRequiredCW -> S15.ProtocolRequiredCW
			
	bind S12ProtocolProvidedCCW -> S12.ProtocolProvidedCCW
	bind S12ProtocolRequiredCCW -> S12.ProtocolRequiredCCW
			
	// Binding Control ports
	bind S15ControlProvided -> S15.ControlProvided
	bind T1TurnoutProvided -> T1.Turnout
	bind S12ControlProvided -> S12.ControlProvided
			
	// Binding Train ports
	bind S15TrainRequired -> S15.TrainRequired
	bind T1TrainRequired -> T1.TrainRequired
	bind S12TrainRequired -> S12.TrainRequired
		
	// Connecting elements of the zone
	channel	[T1.ProtocolProvidedTop] -o)- [S15.ProtocolRequiredCCW]
	channel	[S15.ProtocolProvidedCCW] -o)- [T1.ProtocolRequiredTop]
			
	channel	[T1.ProtocolProvidedStraight] -o)- [S12.ProtocolRequiredCW]
	channel	[S12.ProtocolProvidedCW] -o)- [T1.ProtocolRequiredStraight]											
}