model pathPlanningOne
  import SI = Modelica.SIunits;
  import Cv = Modelica.SIunits.Conversions;
  Integer index;
  parameter Integer StepNumber = 5;
  parameter SI.Time AllMotorName[:] = {1} "Motor names";
  parameter SI.Angle AllAngleStepRad[:] = {0} "All Angles";
  parameter SI.Angle A1AngleBegRad = 0 "Axis1 start Angle";
  parameter SI.Angle A2AngleBegRad = 0 "Axis2 start Angle";
  parameter SI.Angle A3AngleBegRad = 0 "Axis3 start Angle";
  parameter SI.Angle A4AngleBegRad = 0 "Axis4 start Angle";
  parameter SI.AngularVelocity speedMax[4] = fill(3, 4) "Maximum axis speed";
  parameter SI.AngularAcceleration accMax[4] = fill(2.5, 4) "Maximum axis acceleration";
  Boolean endcondition;
  Modelica.StateGraph.InitialStep initialStep1(nOut = 4, nIn = 4) annotation(Placement(visible = true, transformation(origin = {-58, 0}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ControlBusOne controlBus annotation(Placement(visible = true, transformation(origin = {101, 0}, extent = {{-23, -23}, {23, 23}}, rotation = -90), iconTransformation(origin = {101, 1}, extent = {{-23, -23}, {23, 23}}, rotation = -90)));
  PathToAxisControlBus pathToAxis1(nAxis = 1) annotation(Placement(visible = true, transformation(origin = {50, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  pathPlanninTo3Motors pathPlanningOneAction1(q_begin = A1AngleBegRad, q_all = AllAngleStepRad, qd_max = speedMax[1], qdd_max = accMax[1], StepNumber = StepNumber) annotation(Placement(visible = true, transformation(origin = {10, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition5(condition = AllMotorName[index] == 1) annotation(Placement(visible = true, transformation(origin = {-20, 74}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition1 annotation(Placement(visible = true, transformation(origin = {-84, 70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  PathToAxisControlBus pathToAxis2(nAxis = 1) annotation(Placement(visible = true, transformation(origin = {50, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition2 annotation(Placement(visible = true, transformation(origin = {-84, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 360)));
  pathPlanninTo3Motors pathPlanningOneAction2(q_begin = A2AngleBegRad, q_all = AllAngleStepRad, qd_max = speedMax[2], qdd_max = accMax[2], StepNumber = StepNumber) annotation(Placement(visible = true, transformation(origin = {10, 30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  PathToAxisControlBus pathToAxis3(nAxis = 1) annotation(Placement(visible = true, transformation(origin = {50, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  pathPlanninTo3Motors pathPlanningOneAction3(q_begin = A3AngleBegRad, q_all = AllAngleStepRad, qd_max = speedMax[3], qdd_max = accMax[3], StepNumber = StepNumber) annotation(Placement(visible = true, transformation(origin = {10, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition3 annotation(Placement(visible = true, transformation(origin = {-84, -30}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  PathToAxisControlBus pathToAxis4(nAxis = 1) annotation(Placement(visible = true, transformation(origin = {50, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  pathPlanninTo3Motors pathPlanningOneAction4(q_begin = A4AngleBegRad, q_all = AllAngleStepRad, qd_max = speedMax[4], qdd_max = accMax[4], StepNumber = StepNumber) annotation(Placement(visible = true, transformation(origin = {8, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition4 annotation(Placement(visible = true, transformation(origin = {-86, -66}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition6(condition = AllMotorName[index] == 2) annotation(Placement(visible = true, transformation(origin = {-20, 34}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition7(condition = AllMotorName[index] == 3) annotation(Placement(visible = true, transformation(origin = {-20, -26}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.StateGraph.Transition transition8(condition = AllMotorName[index] == 4) annotation(Placement(visible = true, transformation(origin = {-20, -66}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  inner Modelica.StateGraph.StateGraphRoot stateGraphRoot annotation(Placement(visible = true, transformation(origin = {-56, 52}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
initial equation
  index = 1;
  endcondition = false;
equation
  connect(initialStep1.outPort[4], transition8.inPort) annotation(Line(points = {{-47.5, 0}, {-35, 0}, {-35, -66}, {-24, -66}}));
  connect(transition8.outPort, pathPlanningOneAction4.step_in1) annotation(Line(points = {{-18.5, -66}, {-2, -66}}));
  connect(initialStep1.outPort[3], transition7.inPort) annotation(Line(points = {{-47.5, 0}, {-35, 0}, {-35, -26}, {-24, -26}}));
  connect(transition7.outPort, pathPlanningOneAction3.step_in1) annotation(Line(points = {{-18.5, -26}, {0, -26}}));
  connect(initialStep1.outPort[2], transition6.inPort) annotation(Line(points = {{-47.5, 0}, {-35, 0}, {-35, 34}, {-24, 34}}));
  connect(transition6.outPort, pathPlanningOneAction2.step_in1) annotation(Line(points = {{-18.5, 34}, {0, 34}}));
  connect(initialStep1.outPort[1], transition5.inPort) annotation(Line(points = {{-47.5, 0}, {-35, 0}, {-35, 74}, {-24, 74}}));
  connect(pathToAxis2.axisControlBus, controlBus.axisControlBus2) annotation(Line(points = {{60, 30}, {80, 30}, {80, 0}, {101, 0}}, color = {255, 204, 51}, thickness = 0.5));
  connect(pathPlanningOneAction3.step_out1, transition3.inPort) annotation(Line(points = {{-5.55112e-16, -32.4}, {-9.25, -32.4}, {-9.25, -82.4}, {-92.5, -82.4}, {-92.5, -30.4}, {-88, -30.4}}));
  connect(pathPlanningOneAction4.step_out1, transition4.inPort) annotation(Line(points = {{-2, -72.4}, {-5.25, -72.4}, {-5.25, -86.4}, {-96.5, -86.4}, {-96.5, -66.4}, {-90, -66.4}}));
  connect(pathPlanningOneAction2.step_out1, transition2.inPort) annotation(Line(points = {{-5.55112e-16, 27.6}, {-9.5, 27.6}, {-9.5, 89.6}, {-91, 89.6}, {-91, 29.6}, {-88, 29.6}}));
  connect(transition4.outPort, initialStep1.inPort[4]) annotation(Line(points = {{-84.5, -66}, {-75.75, -66}, {-75.75, 0}, {-69, 0}}));
  connect(pathPlanningOneAction4.q, pathToAxis4.q) annotation(Line(points = {{19, -62}, {38, -62}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction4.qd, pathToAxis4.qd) annotation(Line(points = {{19, -67}, {38, -67}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction4.qdd, pathToAxis4.qdd) annotation(Line(points = {{19, -73}, {38, -73}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction4.moving, pathToAxis4.moving) annotation(Line(points = {{19, -78}, {38, -78}}, color = {255, 0, 255}));
  connect(pathToAxis4.axisControlBus, controlBus.axisControlBus4) annotation(Line(points = {{60, -70}, {80, -70}, {80, 0}, {101, 0}}, color = {255, 204, 51}, thickness = 0.5));
  connect(transition3.outPort, initialStep1.inPort[3]) annotation(Line(points = {{-82.5, -30}, {-75.75, -30}, {-75.75, 0}, {-69, 0}}));
  connect(pathPlanningOneAction3.q, pathToAxis3.q) annotation(Line(points = {{21, -22}, {38, -22}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction3.qd, pathToAxis3.qd) annotation(Line(points = {{21, -27}, {38, -27}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction3.qdd, pathToAxis3.qdd) annotation(Line(points = {{21, -33}, {38, -33}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction3.moving, pathToAxis3.moving) annotation(Line(points = {{21, -38}, {38, -38}}, color = {255, 0, 255}));
  connect(pathToAxis3.axisControlBus, controlBus.axisControlBus3) annotation(Line(points = {{60, -30}, {80, -30}, {80, 0}, {101, 0}}, color = {255, 204, 51}, thickness = 0.5));
  connect(pathPlanningOneAction2.qdd, pathToAxis2.qdd) annotation(Line(points = {{21, 27}, {38, 27}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction2.qd, pathToAxis2.qd) annotation(Line(points = {{21, 33}, {38, 33}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction2.moving, pathToAxis2.moving) annotation(Line(points = {{21, 22}, {38, 22}}, color = {255, 0, 255}));
  connect(pathPlanningOneAction2.q, pathToAxis2.q) annotation(Line(points = {{21, 38}, {38, 38}}, color = {0, 0, 127}));
  connect(transition2.outPort, initialStep1.inPort[1]) annotation(Line(points = {{-82.5, 30}, {-75.75, 30}, {-75.75, 0}, {-69, 0}}));
  connect(pathPlanningOneAction1.step_out1, transition1.inPort) annotation(Line(points = {{-5.55112e-16, 67.6}, {-5.25, 67.6}, {-5.25, 93.6}, {-94.5, 93.6}, {-94.5, 69.6}, {-88, 69.6}}));
  connect(transition1.outPort, initialStep1.inPort[2]) annotation(Line(points = {{-82.5, 70}, {-75.75, 70}, {-75.75, 0}, {-69, 0}}));
  connect(transition5.outPort, pathPlanningOneAction1.step_in1) annotation(Line(points = {{-18.5, 74}, {0, 74}}));
  connect(pathPlanningOneAction1.q, pathToAxis1.q) annotation(Line(points = {{21, 78}, {38, 78}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction1.qd, pathToAxis1.qd) annotation(Line(points = {{21, 73}, {38, 73}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction1.qdd, pathToAxis1.qdd) annotation(Line(points = {{21, 67}, {38, 67}}, color = {0, 0, 127}));
  connect(pathPlanningOneAction1.moving, pathToAxis1.moving) annotation(Line(points = {{21, 62}, {38, 62}}, color = {255, 0, 255}));
  connect(pathToAxis1.axisControlBus, controlBus.axisControlBus1) annotation(Line(points = {{60, 70}, {80, 70}, {80, 0}, {101, 0}}, color = {255, 204, 51}, thickness = 0.5));
  connect(pathPlanningOneAction4.index, index);
  connect(pathPlanningOneAction3.index, index);
  connect(pathPlanningOneAction2.index, index);
  connect(pathPlanningOneAction1.index, index);
  when {pathPlanningOneAction4.endcondition, pathPlanningOneAction3.endcondition, pathPlanningOneAction2.endcondition, pathPlanningOneAction1.endcondition} then
    endcondition = true;
  end when;
  when {initialStep1.active} then
    index = pre(index) + 1;
  end when;
  annotation(Icon(coordinateSystem(preserveAspectRatio = true, extent = {{-100, -100}, {100, 100}}), graphics = {RectAngle(extent = {{-100, 100}, {100, -100}}, lineColor = {0, 0, 0}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Solid), Text(extent = {{-150, 150}, {150, 110}}, textString = "%name", lineColor = {0, 0, 255}), Polygon(points = {{-80, 90}, {-88, 68}, {-72, 68}, {-80, 88}, {-80, 90}}, lineColor = {192, 192, 192}, fillColor = {192, 192, 192}, fillPattern = FillPattern.Solid), Line(points = {{-80, 78}, {-80, -82}}, color = {192, 192, 192}), Line(points = {{-90, 0}, {82, 0}}, color = {192, 192, 192}), Polygon(points = {{90, 0}, {68, 8}, {68, -8}, {90, 0}}, lineColor = {192, 192, 192}, fillColor = {192, 192, 192}, fillPattern = FillPattern.Solid), Text(extent = {{-42, 55}, {29, 12}}, lineColor = {192, 192, 192}, textString = "w"), Line(points = {{-80, 0}, {-41, 69}, {26, 69}, {58, 0}}, color = {0, 0, 0}), Text(extent = {{-70, -43}, {85, -68}}, lineColor = {0, 0, 0}, textString = "3 axes")}));
end pathPlanningOne;